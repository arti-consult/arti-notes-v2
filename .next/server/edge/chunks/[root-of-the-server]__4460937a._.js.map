{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/utils/supabase/server.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // Handle cookie setting error\r\n            console.error(\"Error setting cookie:\", error);\r\n          }\r\n        },\r\n        remove(name: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value: \"\", ...options });\r\n          } catch (error) {\r\n            // Handle cookie removal error\r\n            console.error(\"Error removing cookie:\", error);\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AAAA;AACA;AAAA;AAHA;;;AAKO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;IACF;AAEJ"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport type { NextRequest } from \"next/server\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\n// Public routes that don't require authentication\r\nconst publicRoutes = [\r\n  \"/\",\r\n  \"/login\",\r\n  \"/sign-up\",\r\n  \"/auth/callback\",\r\n  \"/auth/auth-code-error\",\r\n  \"/error\",\r\n  \"/api\",\r\n  \"/session-debug\",\r\n];\r\n\r\n// Routes that require authentication but have specific flow logic\r\nconst authRoutes = [\"/onboarding\", \"/dashboard\"];\r\n\r\nfunction isPublicRoute(pathname: string): boolean {\r\n  return publicRoutes.some((route) => {\r\n    if (route === \"/api\") {\r\n      return pathname.startsWith(\"/api/\");\r\n    }\r\n    return pathname === route || pathname.startsWith(`${route}/`);\r\n  });\r\n}\r\n\r\nfunction isAuthRoute(pathname: string): boolean {\r\n  return authRoutes.some((route) => {\r\n    return pathname === route || pathname.startsWith(`${route}/`);\r\n  });\r\n}\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const { pathname } = request.nextUrl;\r\n\r\n  console.log(\"üõ°Ô∏è Middleware checking:\", pathname);\r\n\r\n  // Skip middleware for public routes\r\n  if (isPublicRoute(pathname)) {\r\n    console.log(\"‚úÖ Public route, allowing access\");\r\n    return NextResponse.next();\r\n  }\r\n\r\n  // Skip middleware for static files and Next.js internals\r\n  if (\r\n    pathname.startsWith(\"/_next/\") ||\r\n    pathname.startsWith(\"/favicon\") ||\r\n    pathname.includes(\".\")\r\n  ) {\r\n    return NextResponse.next();\r\n  }\r\n\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    // Get the current session\r\n    const {\r\n      data: { session },\r\n      error: sessionError,\r\n    } = await supabase.auth.getSession();\r\n\r\n    console.log(\"üîê Session check:\", {\r\n      hasSession: !!session,\r\n      userEmail: session?.user?.email,\r\n      error: sessionError?.message,\r\n    });\r\n\r\n    // If no session, redirect to login\r\n    if (!session) {\r\n      console.log(\"‚ùå No session, redirecting to login\");\r\n      const loginUrl = new URL(\"/login\", request.url);\r\n      loginUrl.searchParams.set(\"error\", \"session_not_found\");\r\n      return NextResponse.redirect(loginUrl);\r\n    }\r\n\r\n    const user = session.user;\r\n\r\n    // Check if email is confirmed\r\n    /*if (!user.email_confirmed_at) {\r\n      console.log(\"üìß Email not confirmed, redirecting to login\");\r\n      const loginUrl = new URL(\"/login\", request.url);\r\n      loginUrl.searchParams.set(\"error\", \"email_not_confirmed\");\r\n      return NextResponse.redirect(loginUrl);\r\n    }*/\r\n\r\n    // For authenticated routes, check user's flow status\r\n    if (isAuthRoute(pathname)) {\r\n      // Get user's onboarding status\r\n      const { data: onboarding, error: onboardingError } = await supabase\r\n        .from(\"user_onboarding\")\r\n        .select(\"*\")\r\n        .eq(\"user_id\", user.id)\r\n        .maybeSingle();\r\n\r\n      if (onboardingError) {\r\n        console.error(\"üö® Error fetching onboarding data:\", onboardingError);\r\n        // Redirect to error page on database error\r\n        const errorUrl = new URL(\"/error\", request.url);\r\n        errorUrl.searchParams.set(\"message\", \"Failed to fetch user data\");\r\n        return NextResponse.redirect(errorUrl);\r\n      }\r\n\r\n      const hasCompletedPayment = onboarding?.payment_completed || false;\r\n      const hasCompletedOnboarding = onboarding?.completed_at !== null;\r\n      const hasOnboardingAnswers = !!(\r\n        onboarding?.user_type && onboarding?.referral_source\r\n      );\r\n\r\n      // Get product tag from onboarding or user metadata\r\n      const productTag =\r\n        onboarding?.product_tag ||\r\n        user.user_metadata?.product_tag ||\r\n        process.env.DEFAULT_PAYMENT_LINK_TAG;\r\n\r\n      console.log(\"üìä User flow status:\", {\r\n        userId: user.id,\r\n        hasCompletedPayment,\r\n        hasCompletedOnboarding,\r\n        hasOnboardingAnswers,\r\n        userType: onboarding?.user_type,\r\n        referralSource: onboarding?.referral_source,\r\n        completedAt: onboarding?.completed_at,\r\n        productTag,\r\n        currentPath: pathname,\r\n      });\r\n\r\n      // New Flow Logic: Sign-up ‚Üí Stripe Payment ‚Üí Onboarding ‚Üí Connect Account ‚Üí Dashboard\r\n      if (!hasCompletedPayment) {\r\n        // User hasn't completed payment - redirect directly to Stripe\r\n        console.log(\r\n          \"üí≥ Redirecting to Stripe payment with product tag:\",\r\n          productTag\r\n        );\r\n\r\n        const stripeUrl = productTag\r\n          ? `https://buy.stripe.com/${productTag}`\r\n          : \"https://buy.stripe.com/test_fZufZhb5M5uY57l9xlak003\";\r\n\r\n        console.log(\"Redirecting to Stripe URL:\", stripeUrl);\r\n        return NextResponse.redirect(stripeUrl);\r\n      } else if (hasCompletedPayment && !hasOnboardingAnswers) {\r\n        // User completed payment but hasn't answered onboarding questions\r\n        if (!pathname.startsWith(\"/onboarding\")) {\r\n          console.log(\r\n            \"üìù Redirecting to onboarding - Payment completed, need answers\"\r\n          );\r\n          return NextResponse.redirect(new URL(\"/onboarding\", request.url));\r\n        }\r\n      } else if (\r\n        hasCompletedPayment &&\r\n        hasOnboardingAnswers &&\r\n        !hasCompletedOnboarding\r\n      ) {\r\n        // User has answered questions but hasn't completed the full onboarding flow (calendar connection)\r\n        const connectAccountPath = \"/onboarding/connect-account\";\r\n        if (pathname === \"/onboarding\" || !pathname.startsWith(\"/onboarding\")) {\r\n          console.log(\"üìÖ Redirecting to calendar connection\");\r\n          return NextResponse.redirect(\r\n            new URL(connectAccountPath, request.url)\r\n          );\r\n        }\r\n      } else if (\r\n        hasCompletedPayment &&\r\n        hasCompletedOnboarding &&\r\n        hasOnboardingAnswers\r\n      ) {\r\n        // User has completed the entire flow\r\n        if (pathname === \"/payment\" || pathname.startsWith(\"/onboarding\")) {\r\n          console.log(\"üè† Redirecting completed user to dashboard\");\r\n          return NextResponse.redirect(new URL(\"/dashboard\", request.url));\r\n        }\r\n        // Allow access to dashboard and other authenticated routes\r\n        console.log(\"‚úÖ Fully completed user accessing dashboard\");\r\n      }\r\n    }\r\n\r\n    // Default: allow access\r\n    console.log(\"‚úÖ Access granted\");\r\n    return NextResponse.next();\r\n  } catch (error) {\r\n    console.error(\"üö® Middleware error:\", error);\r\n    // On error, redirect to login for safety\r\n    const loginUrl = new URL(\"/login\", request.url);\r\n    return NextResponse.redirect(loginUrl);\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public files (public folder)\r\n     */\r\n    \"/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":"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"}}]
}