{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/utils/supabase/server.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // Handle cookie setting error\r\n            console.error(\"Error setting cookie:\", error);\r\n          }\r\n        },\r\n        remove(name: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value: \"\", ...options });\r\n          } catch (error) {\r\n            // Handle cookie removal error\r\n            console.error(\"Error removing cookie:\", error);\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AAAA;AACA;AAAA;AAHA;;;AAKO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;IACF;AAEJ"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport { NextResponse, type NextRequest } from \"next/server\";\r\nimport { createClient } from \"./utils/supabase/server\";\r\n\r\n// Route constants\r\nconst ROUTES = {\r\n  AUTH: {\r\n    BASE: \"/(auth)\",\r\n    LOGIN: \"/login\",\r\n    SIGNUP: \"/sign-up\",\r\n    PAYMENT: \"/payment\",\r\n    ONBOARDING: \"/onboarding\",\r\n  },\r\n  DASHBOARD: \"/dashboard\",\r\n} as const;\r\n\r\n// Type for onboarding data\r\ntype OnboardingData = {\r\n  payment_completed: boolean;\r\n  completed_at: string | null;\r\n};\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  try {\r\n    let response = NextResponse.next({\r\n      request: {\r\n        headers: request.headers,\r\n      },\r\n    });\r\n\r\n    // Initialize Supabase client using the existing server client\r\n    const supabase = await createClient();\r\n\r\n    const {\r\n      data: { user },\r\n    } = await supabase.auth.getUser();\r\n\r\n    const isAuthRoute =\r\n      request.nextUrl.pathname.startsWith(ROUTES.AUTH.BASE) ||\r\n      [\r\n        ROUTES.AUTH.LOGIN,\r\n        ROUTES.AUTH.SIGNUP,\r\n        ROUTES.AUTH.PAYMENT,\r\n        ROUTES.AUTH.ONBOARDING,\r\n      ].includes(\r\n        request.nextUrl\r\n          .pathname as (typeof ROUTES.AUTH)[keyof typeof ROUTES.AUTH]\r\n      );\r\n    const isDashboard = request.nextUrl.pathname.startsWith(ROUTES.DASHBOARD);\r\n\r\n    // If no user and trying to access protected routes, redirect to sign-up\r\n    if (!user && (isDashboard || request.nextUrl.pathname === \"/\")) {\r\n      return NextResponse.redirect(new URL(ROUTES.AUTH.SIGNUP, request.url));\r\n    }\r\n\r\n    // If user exists, check their flow status\r\n    if (user && isAuthRoute) {\r\n      const { data: onboardingData, error } = await supabase\r\n        .from(\"user_onboarding\")\r\n        .select(\"payment_completed, completed_at\")\r\n        .eq(\"user_id\", user.id)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error(\"Error fetching onboarding data:\", error);\r\n        return response;\r\n      }\r\n\r\n      const hasCompletedPayment = onboardingData?.payment_completed || false;\r\n      const hasCompletedOnboarding = onboardingData?.completed_at !== null;\r\n\r\n      // Redirect logic based on completion status\r\n      if (hasCompletedPayment && hasCompletedOnboarding) {\r\n        // Everything complete, go to dashboard\r\n        if (!isDashboard) {\r\n          return NextResponse.redirect(new URL(ROUTES.DASHBOARD, request.url));\r\n        }\r\n      } else if (hasCompletedPayment && !hasCompletedOnboarding) {\r\n        // Payment done, needs onboarding\r\n        if (request.nextUrl.pathname !== ROUTES.AUTH.ONBOARDING) {\r\n          return NextResponse.redirect(\r\n            new URL(ROUTES.AUTH.ONBOARDING, request.url)\r\n          );\r\n        }\r\n      } else if (!hasCompletedPayment) {\r\n        // Needs payment first\r\n        if (request.nextUrl.pathname !== ROUTES.AUTH.PAYMENT) {\r\n          return NextResponse.redirect(\r\n            new URL(ROUTES.AUTH.PAYMENT, request.url)\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Middleware error:\", error);\r\n    return NextResponse.next();\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    \"/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;AAEA,kBAAkB;AAClB,MAAM,SAAS;IACb,MAAM;QACJ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,SAAS;QACT,YAAY;IACd;IACA,WAAW;AACb;AAQO,eAAe,WAAW,OAAoB;IACnD,IAAI;QACF,IAAI,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAC/B,SAAS;gBACP,SAAS,QAAQ,OAAO;YAC1B;QACF;QAEA,8DAA8D;QAC9D,MAAM,WAAW,MAAM,CAAA,GAAA,0IAAA,CAAA,eAAY,AAAD;QAElC,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE/B,MAAM,cACJ,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,KACpD;YACE,OAAO,IAAI,CAAC,KAAK;YACjB,OAAO,IAAI,CAAC,MAAM;YAClB,OAAO,IAAI,CAAC,OAAO;YACnB,OAAO,IAAI,CAAC,UAAU;SACvB,CAAC,QAAQ,CACR,QAAQ,OAAO,CACZ,QAAQ;QAEf,MAAM,cAAc,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,SAAS;QAExE,wEAAwE;QACxE,IAAI,CAAC,QAAQ,CAAC,eAAe,QAAQ,OAAO,CAAC,QAAQ,KAAK,GAAG,GAAG;YAC9D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,EAAE,QAAQ,GAAG;QACtE;QAEA,0CAA0C;QAC1C,IAAI,QAAQ,aAAa;YACvB,MAAM,EAAE,MAAM,cAAc,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3C,IAAI,CAAC,mBACL,MAAM,CAAC,mCACP,EAAE,CAAC,WAAW,KAAK,EAAE,EACrB,MAAM;YAET,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,OAAO;YACT;YAEA,MAAM,sBAAsB,gBAAgB,qBAAqB;YACjE,MAAM,yBAAyB,gBAAgB,iBAAiB;YAEhE,4CAA4C;YAC5C,IAAI,uBAAuB,wBAAwB;gBACjD,uCAAuC;gBACvC,IAAI,CAAC,aAAa;oBAChB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,SAAS,EAAE,QAAQ,GAAG;gBACpE;YACF,OAAO,IAAI,uBAAuB,CAAC,wBAAwB;gBACzD,iCAAiC;gBACjC,IAAI,QAAQ,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,UAAU,EAAE;oBACvD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE,QAAQ,GAAG;gBAE/C;YACF,OAAO,IAAI,CAAC,qBAAqB;gBAC/B,sBAAsB;gBACtB,IAAI,QAAQ,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,EAAE;oBACpD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG;gBAE5C;YACF;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}