{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { createServerClient } from \"@supabase/ssr\";\r\n\r\n// Define protection rules for routes\r\nconst protectedRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    requireAuth: true,\r\n    minTier: \"free\", // \"free\", \"basic\", \"premium\", or \"admin\"\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    requireAuth: true,\r\n    minTier: \"admin\",\r\n  },\r\n  {\r\n    path: \"/settings\",\r\n    requireAuth: true,\r\n    minTier: \"free\",\r\n  },\r\n  {\r\n    path: \"/meetings\",\r\n    requireAuth: true,\r\n    minTier: \"free\",\r\n  },\r\n  {\r\n    path: \"/api/recordings\",\r\n    requireAuth: true,\r\n    minTier: \"free\",\r\n  },\r\n];\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  let response = NextResponse.next({\r\n    request: {\r\n      headers: request.headers,\r\n    },\r\n  });\r\n\r\n  const supabase = createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return request.cookies.getAll();\r\n        },\r\n        setAll(cookiesToSet) {\r\n          cookiesToSet.forEach(({ name, value }) =>\r\n            request.cookies.set(name, value)\r\n          );\r\n          response = NextResponse.next({\r\n            request: {\r\n              headers: request.headers,\r\n            },\r\n          });\r\n          cookiesToSet.forEach(({ name, value, options }) =>\r\n            response.cookies.set(name, value, options)\r\n          );\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  // Use getUser for secure authentication\r\n  const {\r\n    data: { user },\r\n    error: userError,\r\n  } = await supabase.auth.getUser();\r\n  const pathname = request.nextUrl.pathname;\r\n\r\n  // If not logged in, redirect to login\r\n  if (!user) {\r\n    if (pathname !== \"/login\") {\r\n      return NextResponse.redirect(new URL(\"/login\", request.url));\r\n    }\r\n    return response;\r\n  }\r\n\r\n  // 1. Check for active or trialing subscription\r\n  const { data: subscription } = await supabase\r\n    .from(\"subscriptions\")\r\n    .select(\"status\")\r\n    .eq(\"user_id\", user.id)\r\n    .in(\"status\", [\"active\", \"trialing\"])\r\n    .single();\r\n\r\n  console.log(\"User ID:\", user.id);\r\n  console.log(\"Subscription found:\", subscription);\r\n\r\n  if (!subscription && pathname !== \"/subscribe\" && pathname !== \"/\") {\r\n    // Allow access to home page without subscription\r\n    return NextResponse.redirect(new URL(\"/subscribe\", request.url));\r\n  }\r\n\r\n  // 2. Check onboarding\r\n  const { data: onboarding } = await supabase\r\n    .from(\"user_onboarding\")\r\n    .select(\"completed_at\")\r\n    .eq(\"user_id\", user.id)\r\n    .not(\"completed_at\", \"is\", null)\r\n    .single();\r\n\r\n  if (subscription && !onboarding && pathname !== \"/onboarding\") {\r\n    // Redirect to onboarding if not completed\r\n    return NextResponse.redirect(new URL(\"/onboarding\", request.url));\r\n  }\r\n\r\n  // 3. If both are true, allow access to dashboard\r\n  if (pathname === \"/dashboard\" && (!subscription || !onboarding)) {\r\n    // If trying to access dashboard without both, redirect accordingly\r\n    if (!subscription) {\r\n      return NextResponse.redirect(new URL(\"/subscribe\", request.url));\r\n    }\r\n    if (!onboarding) {\r\n      return NextResponse.redirect(new URL(\"/onboarding\", request.url));\r\n    }\r\n  }\r\n\r\n  // Check if the path is protected\r\n  const protectedRoute = protectedRoutes.find((route) =>\r\n    pathname.startsWith(route.path)\r\n  );\r\n\r\n  // If route is protected and user is not authenticated, redirect to login\r\n  if (protectedRoute?.requireAuth && !user) {\r\n    const redirectUrl = new URL(\"/login\", request.url);\r\n    redirectUrl.searchParams.set(\"redirect\", pathname);\r\n    return NextResponse.redirect(redirectUrl);\r\n  }\r\n\r\n  // If authenticated and route requires a minimum tier\r\n  if (user && protectedRoute?.minTier) {\r\n    // Skip tier check for admin paths if the path itself requires admin access\r\n    if (pathname.startsWith(\"/admin\") && protectedRoute.minTier === \"admin\") {\r\n      // Check if user is admin\r\n      const { data } = await supabase\r\n        .from(\"user_roles\")\r\n        .select(\r\n          `\r\n          roles!inner (\r\n            name\r\n          )\r\n        `\r\n        )\r\n        .eq(\"user_id\", user.id)\r\n        .eq(\"roles.name\", \"admin\");\r\n\r\n      // If not admin, redirect to dashboard\r\n      if (!data || data.length === 0) {\r\n        return NextResponse.redirect(new URL(\"/dashboard\", request.url));\r\n      }\r\n    } else if (protectedRoute.minTier !== \"free\") {\r\n      // For non-admin paths that require a minimum tier other than free\r\n      const getTierLevel = (tier: string): number => {\r\n        const levels = { free: 0, basic: 1, premium: 2, admin: 3 };\r\n        return levels[tier as keyof typeof levels] || 0;\r\n      };\r\n\r\n      const { data: userRoles } = await supabase\r\n        .from(\"user_roles\")\r\n        .select(\r\n          `\r\n          roles!inner (\r\n            name\r\n          )\r\n        `\r\n        )\r\n        .eq(\"user_id\", user.id);\r\n\r\n      const minTierLevel = getTierLevel(protectedRoute.minTier);\r\n      const userTiers =\r\n        userRoles?.map((ur) => getTierLevel((ur.roles as any).name)) || [];\r\n      const maxUserTier = Math.max(...userTiers, 0);\r\n\r\n      if (maxUserTier < minTierLevel) {\r\n        return NextResponse.redirect(\r\n          new URL(\"/pricing?upgrade=true\", request.url)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Only check subscription for protected routes\r\n  if (protectedRoute?.requireAuth) {\r\n    const { data: subscription } = await supabase\r\n      .from(\"subscriptions\")\r\n      .select(\"status\")\r\n      .eq(\"user_id\", user.id)\r\n      .in(\"status\", [\"active\", \"trialing\"])\r\n      .single();\r\n\r\n    if (!subscription && pathname !== \"/subscribe\") {\r\n      return NextResponse.redirect(new URL(\"/subscribe\", request.url));\r\n    }\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public files (assets)\r\n     * - api/webhooks (webhook endpoints)\r\n     * - auth pages (to prevent redirect loops)\r\n     */\r\n    \"/((?!_next/static|_next/image|favicon.ico|api/webhooks|login|register|onboarding|pricing|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":"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"}}]
}