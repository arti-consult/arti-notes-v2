{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/utils/supabase/server.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // Handle cookie setting error\r\n            console.error(\"Error setting cookie:\", error);\r\n          }\r\n        },\r\n        remove(name: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value: \"\", ...options });\r\n          } catch (error) {\r\n            // Handle cookie removal error\r\n            console.error(\"Error removing cookie:\", error);\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;;;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;IACF;AAEJ;;;IA9BsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/api/auth/nylas/callback/route.ts"],"sourcesContent":["// src/app/api/auth/nylas/callback/route.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log(\"üîÑ Starting Nylas OAuth callback handler...\");\r\n    const supabase = await createClient();\r\n\r\n    // Get the authorization code from the URL\r\n    const url = new URL(request.url);\r\n    const code = url.searchParams.get(\"code\");\r\n    const state = url.searchParams.get(\"state\"); // Contains user ID\r\n    const error = url.searchParams.get(\"error\");\r\n\r\n    console.log(\"üìù Callback received:\", {\r\n      code: code ? `${code.substring(0, 20)}...` : null,\r\n      state,\r\n      error,\r\n      fullUrl: request.url,\r\n    });\r\n\r\n    if (error) {\r\n      console.error(\"‚ùå OAuth error:\", error);\r\n      return NextResponse.redirect(\r\n        new URL(\r\n          `/onboarding?error=Calendar connection failed: ${error}`,\r\n          request.url\r\n        )\r\n      );\r\n    }\r\n\r\n    if (!code) {\r\n      console.error(\"‚ùå No authorization code received\");\r\n      return NextResponse.redirect(\r\n        new URL(\"/onboarding?error=No authorization code received\", request.url)\r\n      );\r\n    }\r\n\r\n    // Get user ID from session (more reliable than state)\r\n    const {\r\n      data: { user },\r\n      error: userError,\r\n    } = await supabase.auth.getUser();\r\n\r\n    if (userError || !user) {\r\n      console.error(\"‚ùå User not authenticated:\", userError);\r\n      return NextResponse.redirect(\r\n        new URL(\"/login?error=User not authenticated\", request.url)\r\n      );\r\n    }\r\n\r\n    const userId = user.id;\r\n    console.log(\"üë§ Processing callback for user:\", userId);\r\n\r\n    // Exchange code for token\r\n    console.log(\"üîÑ Calling token exchange endpoint...\");\r\n    const tokenResponse = await fetch(\r\n      new URL(\"/api/auth/nylas/token\", request.url),\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ code, userId }),\r\n      }\r\n    );\r\n\r\n    console.log(\"üì° Token response status:\", tokenResponse.status);\r\n\r\n    if (!tokenResponse.ok) {\r\n      const errorData = await tokenResponse.json();\r\n      console.error(\"‚ùå Failed to exchange code for token:\", errorData);\r\n      return NextResponse.redirect(\r\n        new URL(\r\n          `/onboarding?error=Failed to connect calendar: ${errorData.error}`,\r\n          request.url\r\n        )\r\n      );\r\n    }\r\n\r\n    const tokenData = await tokenResponse.json();\r\n    const { grantId, accessToken } = tokenData;\r\n\r\n    console.log(\"‚úÖ Token exchange successful:\", {\r\n      grantId,\r\n      hasAccessToken: !!accessToken,\r\n      tokenDataKeys: Object.keys(tokenData),\r\n    });\r\n\r\n    if (!grantId) {\r\n      console.error(\"‚ùå No grant ID received from token exchange\");\r\n      return NextResponse.redirect(\r\n        new URL(\"/onboarding?error=No grant ID received\", request.url)\r\n      );\r\n    }\r\n\r\n    // Update user's profile with grant ID and calendar connection status\r\n    console.log(\"üîÑ Updating profile with grant ID...\");\r\n    try {\r\n      const { data: updateData, error: profileError } = await supabase\r\n        .from(\"profiles\")\r\n        .update({\r\n          nylas_grant_id: grantId,\r\n          calendar_connected: true,\r\n\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"id\", userId)\r\n        .select();\r\n\r\n      if (profileError) {\r\n        console.error(\"‚ùå Profile update failed:\", profileError);\r\n\r\n        // Try upsert as fallback\r\n        console.log(\"üîÑ Trying upsert fallback...\");\r\n        const { data: upsertData, error: upsertError } = await supabase\r\n          .from(\"profiles\")\r\n          .upsert({\r\n            id: userId,\r\n            nylas_grant_id: grantId,\r\n            calendar_connected: true,\r\n            completed_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          })\r\n          .select();\r\n\r\n        if (upsertError) {\r\n          console.error(\"‚ùå Upsert also failed:\", upsertError);\r\n        } else {\r\n          console.log(\"‚úÖ Upsert succeeded:\", upsertData);\r\n        }\r\n      } else {\r\n        console.log(\"‚úÖ Profile updated successfully:\", updateData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Exception updating profile:\", error);\r\n    }\r\n\r\n    // Also update onboarding record\r\n    console.log(\"üîÑ Updating onboarding record...\");\r\n    try {\r\n      const { data: onboardingData, error: onboardingError } = await supabase\r\n        .from(\"user_onboarding\")\r\n        .update({\r\n          calendar_connected: true,\r\n          completed_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"user_id\", userId)\r\n        .select();\r\n\r\n      if (onboardingError) {\r\n        console.error(\"‚ùå Onboarding update failed:\", onboardingError);\r\n      } else {\r\n        console.log(\"‚úÖ Onboarding updated successfully:\", onboardingData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Exception updating onboarding:\", error);\r\n    }\r\n\r\n    // Check onboarding completion status\r\n    const { data: onboarding } = await supabase\r\n      .from(\"user_onboarding\")\r\n      .select(\"completed_at\")\r\n      .eq(\"user_id\", userId)\r\n      .maybeSingle();\r\n\r\n    const redirectPath = onboarding?.completed_at\r\n      ? \"/dashboard\"\r\n      : \"/onboarding\";\r\n\r\n    console.log(\"üèÅ Redirecting to:\", redirectPath);\r\n\r\n    // Redirect with success message and grant ID\r\n    return NextResponse.redirect(\r\n      new URL(\r\n        `${redirectPath}?calendar=connected&grant_id=${grantId}`,\r\n        request.url\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(\"üí• Unexpected error in Nylas callback:\", error);\r\n    return NextResponse.redirect(\r\n      new URL(\"/onboarding?error=An unexpected error occurred\", request.url)\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}