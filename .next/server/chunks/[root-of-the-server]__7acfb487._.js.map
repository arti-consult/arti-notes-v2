{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          cookieStore.set({ name, value, ...options });\r\n        },\r\n        remove(name: string, options: any) {\r\n          cookieStore.set({ name, value: \"\", ...options });\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/lib/config/stripe.ts"],"sourcesContent":["export function getStripeSecretKey(): string {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    if (!process.env.STRIPE_TEST_SECRET_KEY) {\r\n      throw new Error(\"Missing STRIPE_TEST_SECRET_KEY environment variable\");\r\n    }\r\n    return process.env.STRIPE_TEST_SECRET_KEY;\r\n  } else {\r\n    if (!process.env.STRIPE_PRODUCTION_SECRET_KEY) {\r\n      throw new Error(\r\n        \"Missing STRIPE_PRODUCTION_SECRET_KEY environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_PRODUCTION_SECRET_KEY;\r\n  }\r\n}\r\n\r\nexport function getStripeWebhookSecret(): string {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    if (!process.env.STRIPE_TEST_WEBHOOK_SECRET) {\r\n      throw new Error(\r\n        \"Missing STRIPE_TEST_WEBHOOK_SECRET environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_TEST_WEBHOOK_SECRET;\r\n  } else {\r\n    if (!process.env.STRIPE_PRODUCTION_WEBHOOK_SECRET) {\r\n      throw new Error(\r\n        \"Missing STRIPE_PRODUCTION_WEBHOOK_SECRET environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_PRODUCTION_WEBHOOK_SECRET;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAO,SAAS;IACd,wCAA4C;QAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,sBAAsB,EAAE;YACvC,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,QAAQ,GAAG,CAAC,sBAAsB;IAC3C,OAAO;;IAOP;AACF;AAEO,SAAS;IACd,wCAA4C;QAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,0BAA0B,EAAE;YAC3C,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,QAAQ,GAAG,CAAC,0BAA0B;IAC/C,OAAO;;IAOP;AACF","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/utils/stripe/stripe-service.ts"],"sourcesContent":["import { Stripe } from \"stripe\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\nimport { getStripeSecretKey } from \"@/lib/config/stripe\";\r\n\r\nconst stripe = new Stripe(getStripeSecretKey());\r\n\r\n/**\r\n * Get or create a Stripe customer for a user\r\n */\r\nasync function getOrCreateStripeCustomer(userId: string): Promise<string> {\r\n  const supabase = await createClient();\r\n\r\n  // First, check if user already has a Stripe customer ID\r\n  const { data: profile } = await supabase\r\n    .from(\"profiles\")\r\n    .select(\"stripe_customer_id\")\r\n    .eq(\"id\", userId)\r\n    .single();\r\n\r\n  if (profile?.stripe_customer_id) {\r\n    return profile.stripe_customer_id;\r\n  }\r\n\r\n  // If not, fetch user info and create a new Stripe customer\r\n  const { data: user } = await supabase.auth.admin.getUserById(userId);\r\n\r\n  if (!user || !user.user) {\r\n    throw new Error(\"User not found\");\r\n  }\r\n\r\n  const customer = await stripe.customers.create({\r\n    email: user.user.email,\r\n    name: user.user.user_metadata?.full_name || user.user.email,\r\n    metadata: {\r\n      supabaseUserId: userId,\r\n    },\r\n  });\r\n\r\n  // Store the Stripe customer ID in the user's profile\r\n  await supabase\r\n    .from(\"profiles\")\r\n    .update({ stripe_customer_id: customer.id })\r\n    .eq(\"id\", userId);\r\n\r\n  return customer.id;\r\n}\r\n\r\n/**\r\n * Create a Stripe Checkout session for subscription\r\n */\r\nexport async function createSubscriptionCheckout(\r\n  userId: string,\r\n  priceId: string,\r\n  returnUrl: string\r\n): Promise<string> {\r\n  const customerId = await getOrCreateStripeCustomer(userId);\r\n\r\n  const session = await stripe.checkout.sessions.create({\r\n    customer: customerId,\r\n    payment_method_types: [\"card\"],\r\n    line_items: [\r\n      {\r\n        price: priceId,\r\n        quantity: 1,\r\n      },\r\n    ],\r\n    mode: \"subscription\",\r\n    subscription_data: {\r\n      trial_period_days: 14,\r\n    },\r\n    success_url: `${returnUrl}?success=true`,\r\n    cancel_url: `${returnUrl}?canceled=true`,\r\n    metadata: {\r\n      userId,\r\n      type: \"subscription\",\r\n    },\r\n  });\r\n\r\n  return session.url || \"\";\r\n}\r\n\r\n/**\r\n * Create a Stripe Checkout session for credit package\r\n */\r\nexport async function createCreditPackageCheckout(\r\n  userId: string,\r\n  priceId: string,\r\n  returnUrl: string\r\n): Promise<string> {\r\n  const customerId = await getOrCreateStripeCustomer(userId);\r\n\r\n  const session = await stripe.checkout.sessions.create({\r\n    customer: customerId,\r\n    payment_method_types: [\"card\"],\r\n    line_items: [\r\n      {\r\n        price: priceId,\r\n        quantity: 1,\r\n      },\r\n    ],\r\n    mode: \"payment\",\r\n    success_url: `${returnUrl}?success=true`,\r\n    cancel_url: `${returnUrl}?canceled=true`,\r\n    metadata: {\r\n      userId,\r\n      type: \"credits\",\r\n    },\r\n  });\r\n\r\n  return session.url || \"\";\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,wJAAA,CAAA,SAAM,CAAC,CAAA,GAAA,gIAAA,CAAA,qBAAkB,AAAD;AAE3C;;CAEC,GACD,eAAe,0BAA0B,MAAc;IACrD,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;IAElC,wDAAwD;IACxD,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,SAC7B,IAAI,CAAC,YACL,MAAM,CAAC,sBACP,EAAE,CAAC,MAAM,QACT,MAAM;IAET,IAAI,SAAS,oBAAoB;QAC/B,OAAO,QAAQ,kBAAkB;IACnC;IAEA,2DAA2D;IAC3D,MAAM,EAAE,MAAM,IAAI,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAE7D,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,OAAO,SAAS,CAAC,MAAM,CAAC;QAC7C,OAAO,KAAK,IAAI,CAAC,KAAK;QACtB,MAAM,KAAK,IAAI,CAAC,aAAa,EAAE,aAAa,KAAK,IAAI,CAAC,KAAK;QAC3D,UAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qDAAqD;IACrD,MAAM,SACH,IAAI,CAAC,YACL,MAAM,CAAC;QAAE,oBAAoB,SAAS,EAAE;IAAC,GACzC,EAAE,CAAC,MAAM;IAEZ,OAAO,SAAS,EAAE;AACpB;AAKO,eAAe,2BACpB,MAAc,EACd,OAAe,EACf,SAAiB;IAEjB,MAAM,aAAa,MAAM,0BAA0B;IAEnD,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QACpD,UAAU;QACV,sBAAsB;YAAC;SAAO;QAC9B,YAAY;YACV;gBACE,OAAO;gBACP,UAAU;YACZ;SACD;QACD,MAAM;QACN,mBAAmB;YACjB,mBAAmB;QACrB;QACA,aAAa,GAAG,UAAU,aAAa,CAAC;QACxC,YAAY,GAAG,UAAU,cAAc,CAAC;QACxC,UAAU;YACR;YACA,MAAM;QACR;IACF;IAEA,OAAO,QAAQ,GAAG,IAAI;AACxB;AAKO,eAAe,4BACpB,MAAc,EACd,OAAe,EACf,SAAiB;IAEjB,MAAM,aAAa,MAAM,0BAA0B;IAEnD,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QACpD,UAAU;QACV,sBAAsB;YAAC;SAAO;QAC9B,YAAY;YACV;gBACE,OAAO;gBACP,UAAU;YACZ;SACD;QACD,MAAM;QACN,aAAa,GAAG,UAAU,aAAa,CAAC;QACxC,YAAY,GAAG,UAAU,cAAc,CAAC;QACxC,UAAU;YACR;YACA,MAAM;QACR;IACF;IAEA,OAAO,QAAQ,GAAG,IAAI;AACxB","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/api/onboarding/create-checkout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { createSubscriptionCheckout } from \"@/utils/stripe/stripe-service\";\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const { userId } = await req.json();\r\n\r\n    if (!userId) {\r\n      return NextResponse.json({ error: \"Missing userId\" }, { status: 400 });\r\n    }\r\n\r\n    const checkoutUrl = await createSubscriptionCheckout(\r\n      userId,\r\n      process.env.NEXT_PUBLIC_STRIPE_PRICE_ID || \"\",\r\n      `${req.headers.get(\"origin\")}/onboarding`\r\n    );\r\n\r\n    return NextResponse.json({ url: checkoutUrl });\r\n  } catch (error) {\r\n    console.error(\"Error creating checkout session:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to create checkout session\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAEjC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,MAAM,cAAc,MAAM,CAAA,GAAA,6IAAA,CAAA,6BAA0B,AAAD,EACjD,QACA,sEAA2C,IAC3C,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,WAAW,CAAC;QAG3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,KAAK;QAAY;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAoC,GAC7C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}