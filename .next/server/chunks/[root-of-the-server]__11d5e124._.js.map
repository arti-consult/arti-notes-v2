{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/lib/config/stripe.ts"],"sourcesContent":["export function getStripeSecretKey(): string {\r\n  console.log(\"Current NODE_ENV:\", process.env.NODE_ENV);\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.log(\"Checking STRIPE_TEST_SECRET_KEY...\");\r\n    if (!process.env.STRIPE_TEST_SECRET_KEY) {\r\n      throw new Error(\"Missing STRIPE_TEST_SECRET_KEY environment variable\");\r\n    }\r\n    return process.env.STRIPE_TEST_SECRET_KEY;\r\n  } else {\r\n    console.log(\"Checking STRIPE_PRODUCTION_SECRET_KEY...\");\r\n    if (!process.env.STRIPE_PRODUCTION_SECRET_KEY) {\r\n      throw new Error(\r\n        \"Missing STRIPE_PRODUCTION_SECRET_KEY environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_PRODUCTION_SECRET_KEY;\r\n  }\r\n}\r\n\r\nexport function getStripeWebhookSecret(): string {\r\n  console.log(\"Getting webhook secret for NODE_ENV:\", process.env.NODE_ENV);\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.log(\"Checking STRIPE_TEST_WEBHOOK_SECRET...\");\r\n    console.log(\r\n      \"STRIPE_TEST_WEBHOOK_SECRET exists:\",\r\n      !!process.env.STRIPE_TEST_WEBHOOK_SECRET\r\n    );\r\n    if (!process.env.STRIPE_TEST_WEBHOOK_SECRET) {\r\n      throw new Error(\r\n        \"Missing STRIPE_TEST_WEBHOOK_SECRET environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_TEST_WEBHOOK_SECRET;\r\n  } else {\r\n    console.log(\"Checking STRIPE_PRODUCTION_WEBHOOK_SECRET...\");\r\n    console.log(\r\n      \"STRIPE_PRODUCTION_WEBHOOK_SECRET exists:\",\r\n      !!process.env.STRIPE_PRODUCTION_WEBHOOK_SECRET\r\n    );\r\n    if (!process.env.STRIPE_PRODUCTION_WEBHOOK_SECRET) {\r\n      throw new Error(\r\n        \"Missing STRIPE_PRODUCTION_WEBHOOK_SECRET environment variable\"\r\n      );\r\n    }\r\n    return process.env.STRIPE_PRODUCTION_WEBHOOK_SECRET;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAO,SAAS;IACd,QAAQ,GAAG,CAAC;IACZ,wCAA4C;QAC1C,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,sBAAsB,EAAE;YACvC,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,QAAQ,GAAG,CAAC,sBAAsB;IAC3C,OAAO;;IAQP;AACF;AAEO,SAAS;IACd,QAAQ,GAAG,CAAC;IACZ,wCAA4C;QAC1C,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CACT,sCACA,CAAC,CAAC,QAAQ,GAAG,CAAC,0BAA0B;QAE1C,IAAI,CAAC,QAAQ,GAAG,CAAC,0BAA0B,EAAE;YAC3C,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,QAAQ,GAAG,CAAC,0BAA0B;IAC/C,OAAO;;IAYP;AACF","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/api/webhooks/stripe/route.ts"],"sourcesContent":["// src/app/api/webhooks/stripe/route.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { headers } from \"next/headers\";\r\nimport Stripe from \"stripe\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\nimport {\r\n  getStripeSecretKey,\r\n  getStripeWebhookSecret,\r\n} from \"@/lib/config/stripe\";\r\n\r\n// Initialize Stripe with the secret key (not webhook secret)\r\nconst stripe = new Stripe(getStripeSecretKey(), {\r\n  apiVersion: \"2025-04-30.basil\",\r\n  typescript: true,\r\n});\r\n\r\n// This is crucial - it tells Next.js not to parse the body\r\nexport const runtime = \"nodejs\";\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    // Get the raw body as an ArrayBuffer, then convert to Buffer\r\n    const arrayBuffer = await req.arrayBuffer();\r\n    const body = Buffer.from(arrayBuffer);\r\n\r\n    const headersList = await headers();\r\n    const signature = headersList.get(\"stripe-signature\");\r\n\r\n    console.log(\"Received webhook with signature:\", signature);\r\n\r\n    // Get webhook secret using your config function\r\n    const webhookSecret = getStripeWebhookSecret();\r\n\r\n    if (!webhookSecret) {\r\n      console.error(\"Stripe webhook secret is not configured\");\r\n      return NextResponse.json(\r\n        { error: \"Webhook configuration error\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Add debug logging\r\n    console.log(\"Webhook secret length:\", webhookSecret.length);\r\n    console.log(\"Webhook secret first 4 chars:\", webhookSecret.substring(0, 4));\r\n\r\n    if (!signature) {\r\n      return NextResponse.json(\r\n        { error: \"Missing stripe-signature header\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Construct and verify the webhook event\r\n    let event: Stripe.Event;\r\n    try {\r\n      // Use the raw body Buffer for signature verification\r\n      event = stripe.webhooks.constructEvent(body, signature, webhookSecret);\r\n    } catch (err) {\r\n      console.error(\"Webhook signature verification failed:\", err);\r\n      return NextResponse.json({ error: \"Invalid signature\" }, { status: 400 });\r\n    }\r\n\r\n    // Handle different event types\r\n    switch (event.type) {\r\n      case \"checkout.session.completed\":\r\n      case \"checkout.session.async_payment_succeeded\": {\r\n        const session = event.data.object as Stripe.Checkout.Session;\r\n\r\n        try {\r\n          // Retrieve customer to get user metadata\r\n          const customer = (await stripe.customers.retrieve(\r\n            session.customer as string\r\n          )) as Stripe.Customer;\r\n\r\n          const userId = customer.metadata?.userId;\r\n\r\n          if (!userId) {\r\n            return NextResponse.json({ received: true });\r\n          }\r\n\r\n          console.log(`Checkout completed for user: ${userId}`);\r\n          return NextResponse.json({ received: true });\r\n        } catch (err) {\r\n          return NextResponse.json({ received: true });\r\n        }\r\n      }\r\n\r\n      case \"customer.subscription.created\": {\r\n        const subscription = event.data.object as Stripe.Subscription;\r\n\r\n        try {\r\n          // Get customer to find associated user\r\n          const customer = (await stripe.customers.retrieve(\r\n            subscription.customer as string\r\n          )) as Stripe.Customer;\r\n\r\n          const userId = customer.metadata?.userId;\r\n\r\n          if (!userId) {\r\n            console.error(\"No userId found in customer metadata\");\r\n            return NextResponse.json({ received: true });\r\n          }\r\n\r\n          return NextResponse.json({ received: true });\r\n        } catch (err) {\r\n          return NextResponse.json({ received: true });\r\n        }\r\n      }\r\n\r\n      case \"customer.subscription.updated\": {\r\n        const subscription = event.data.object as Stripe.Subscription;\r\n\r\n        try {\r\n          const customer = (await stripe.customers.retrieve(\r\n            subscription.customer as string\r\n          )) as Stripe.Customer;\r\n\r\n          const userId = customer.metadata?.userId;\r\n\r\n          if (!userId) {\r\n            return NextResponse.json({ received: true });\r\n          }\r\n\r\n          return NextResponse.json({ received: true });\r\n        } catch (err) {\r\n          return NextResponse.json({ received: true });\r\n        }\r\n      }\r\n\r\n      case \"customer.subscription.deleted\": {\r\n        const subscription = event.data.object as Stripe.Subscription;\r\n\r\n        try {\r\n          const customer = (await stripe.customers.retrieve(\r\n            subscription.customer as string\r\n          )) as Stripe.Customer;\r\n\r\n          const userId = customer.metadata?.userId;\r\n\r\n          if (!userId) {\r\n            return NextResponse.json({ received: true });\r\n          }\r\n\r\n          return NextResponse.json({ received: true });\r\n        } catch (err) {\r\n          return NextResponse.json({ received: true });\r\n        }\r\n      }\r\n\r\n      // Acknowledge other events without special handling\r\n      case \"payment_method.attached\":\r\n      case \"customer.created\":\r\n      case \"customer.updated\":\r\n      case \"setup_intent.created\":\r\n      case \"setup_intent.succeeded\":\r\n      case \"invoice.created\":\r\n      case \"invoice.finalized\":\r\n      case \"invoice.paid\":\r\n      case \"invoice.payment_succeeded\":\r\n      case \"payment_link.created\": {\r\n        return NextResponse.json({ received: true });\r\n      }\r\n\r\n      default: {\r\n        return NextResponse.json({ received: true });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      {\r\n        error: \"Webhook processing failed\",\r\n        details: error instanceof Error ? error.message : \"Unknown error\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}