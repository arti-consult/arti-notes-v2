{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/lib/nlyas.ts"],"sourcesContent":["import Nylas from \"nylas\";\r\n\r\nif (!process.env.NYLAS_API_KEY) {\r\n  throw new Error(\"NYLAS_API_KEY is required\");\r\n}\r\n\r\nexport const nylasConfig = {\r\n  clientId: process.env.NYLAS_CLIENT_ID,\r\n  callbackUri: process.env.NYLAS_CALLBACK_URI,\r\n  apiKey: process.env.NYLAS_API_KEY,\r\n  apiUri: process.env.NYLAS_API_URI,\r\n};\r\n\r\nexport const nylas = new Nylas({\r\n  apiKey: nylasConfig.apiKey,\r\n  apiUri: nylasConfig.apiUri,\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAa,EAAE;IAC9B,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,cAAc;IACzB,UAAU,QAAQ,GAAG,CAAC,eAAe;IACrC,aAAa,QAAQ,GAAG,CAAC,kBAAkB;IAC3C,QAAQ,QAAQ,GAAG,CAAC,aAAa;IACjC,QAAQ,QAAQ,GAAG,CAAC,aAAa;AACnC;AAEO,MAAM,QAAQ,IAAI,8JAAA,CAAA,UAAK,CAAC;IAC7B,QAAQ,YAAY,MAAM;IAC1B,QAAQ,YAAY,MAAM;AAC5B","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/utils/supabase/server.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // Handle cookie setting error\r\n            console.error(\"Error setting cookie:\", error);\r\n          }\r\n        },\r\n        remove(name: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value: \"\", ...options });\r\n          } catch (error) {\r\n            // Handle cookie removal error\r\n            console.error(\"Error removing cookie:\", error);\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;;;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;IACF;AAEJ;;;IA9BsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/api/auth/nylas/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { nylas, nylasConfig } from \"@/lib/nlyas\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log(\"Starting Nylas OAuth flow...\");\r\n    const supabase = await createClient();\r\n\r\n    // Verify user is authenticated\r\n    const {\r\n      data: { user },\r\n      error,\r\n    } = await supabase.auth.getUser();\r\n\r\n    if (error || !user) {\r\n      console.error(\"User not authenticated:\", error);\r\n      return NextResponse.json(\r\n        { error: \"Authentication required\" },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    if (!nylasConfig.clientId || !nylasConfig.callbackUri) {\r\n      console.error(\"Missing Nylas configuration\");\r\n      return NextResponse.json(\r\n        { error: \"Missing Nylas configuration\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Generate Nylas OAuth URL\r\n    const authUrl = nylas.auth.urlForOAuth2({\r\n      clientId: nylasConfig.clientId,\r\n      redirectUri: nylasConfig.callbackUri,\r\n    });\r\n\r\n    console.log(\"Generated Nylas OAuth URL:\", authUrl);\r\n\r\n    return NextResponse.json({ url: authUrl });\r\n  } catch (error) {\r\n    console.error(\"Error in Nylas auth route:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to generate Nylas auth URL\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;QAElC,+BAA+B;QAC/B,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,KAAK,EACN,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE/B,IAAI,SAAS,CAAC,MAAM;YAClB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,qHAAA,CAAA,cAAW,CAAC,QAAQ,IAAI,CAAC,qHAAA,CAAA,cAAW,CAAC,WAAW,EAAE;YACrD,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA8B,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,UAAU,qHAAA,CAAA,QAAK,CAAC,IAAI,CAAC,YAAY,CAAC;YACtC,UAAU,qHAAA,CAAA,cAAW,CAAC,QAAQ;YAC9B,aAAa,qHAAA,CAAA,cAAW,CAAC,WAAW;QACtC;QAEA,QAAQ,GAAG,CAAC,8BAA8B;QAE1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,KAAK;QAAQ;IAC1C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAoC,GAC7C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}