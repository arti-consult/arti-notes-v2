{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  const password = formData.get('password') as string\r\n  const confirmPassword = formData.get('confirmPassword') as string\r\n\r\n  // Validate password match\r\n  if (password !== confirmPassword) {\r\n    redirect('/error?message=Passwords do not match')\r\n  }\r\n\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: password,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/onboarding')\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'google',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n} "],"names":[],"mappings":";;;;;;IAOsB,SAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  const password = formData.get('password') as string\r\n  const confirmPassword = formData.get('confirmPassword') as string\r\n\r\n  // Validate password match\r\n  if (password !== confirmPassword) {\r\n    redirect('/error?message=Passwords do not match')\r\n  }\r\n\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: password,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/onboarding')\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'google',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n} "],"names":[],"mappings":";;;;;;IA+CsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/toast-notification.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ninterface ToastNotificationProps {\r\n  message: string;\r\n  type: \"error\" | \"success\" | \"info\";\r\n  onClose: () => void;\r\n}\r\n\r\nexport function ToastNotification({\r\n  message,\r\n  type,\r\n  onClose,\r\n}: ToastNotificationProps) {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsVisible(false);\r\n      onClose();\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const bgColor = {\r\n    error: \"bg-red-100 border-red-400 text-red-700\",\r\n    success: \"bg-green-100 border-green-400 text-green-700\",\r\n    info: \"bg-blue-100 border-blue-400 text-blue-700\",\r\n  }[type];\r\n\r\n  return (\r\n    <div\r\n      className={`fixed top-4 right-4 border ${bgColor} px-4 py-3 rounded relative`}\r\n      role=\"alert\"\r\n    >\r\n      <span className=\"block sm:inline\">{message}</span>\r\n      <span\r\n        className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\r\n        onClick={() => {\r\n          setIsVisible(false);\r\n          onClose();\r\n        }}\r\n      >\r\n        <svg\r\n          className=\"fill-current h-6 w-6\"\r\n          role=\"button\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 20 20\"\r\n        >\r\n          <title>Close</title>\r\n          <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAQO,SAAS,kBAAkB,EAChC,OAAO,EACP,IAAI,EACJ,OAAO,EACgB;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,WAAW;YACvB,aAAa;YACb;QACF,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAQ;IAEZ,IAAI,CAAC,WAAW,OAAO;IAEvB,MAAM,UAAU;QACd,OAAO;QACP,SAAS;QACT,MAAM;IACR,CAAC,CAAC,KAAK;IAEP,qBACE,8OAAC;QACC,WAAW,CAAC,2BAA2B,EAAE,QAAQ,2BAA2B,CAAC;QAC7E,MAAK;;0BAEL,8OAAC;gBAAK,WAAU;0BAAmB;;;;;;0BACnC,8OAAC;gBACC,WAAU;gBACV,SAAS;oBACP,aAAa;oBACb;gBACF;0BAEA,cAAA,8OAAC;oBACC,WAAU;oBACV,MAAK;oBACL,OAAM;oBACN,SAAQ;;sCAER,8OAAC;sCAAM;;;;;;sCACP,8OAAC;4BAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { signup, signInWithGoogle, signInWithMicrosoft } from \"./actions\";\r\nimport { FaGoogle, FaMicrosoft } from \"react-icons/fa\";\r\nimport { createClient } from \"@/utils/supabase/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { ToastNotification } from \"@/components/ui/toast-notification\";\r\nimport Link from \"next/link\";\r\nimport { AuthError } from \"@supabase/supabase-js\";\r\n\r\ninterface SignupResult {\r\n  error?: string;\r\n  success?: boolean;\r\n}\r\n\r\nexport default function SignUpPage() {\r\n  const router = useRouter();\r\n  const supabase = createClient();\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      const {\r\n        data: { session },\r\n      } = await supabase.auth.getSession();\r\n\r\n      if (session) {\r\n        router.push(\"/dashboard\");\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n  }, [router]);\r\n\r\n  const handleGoogleSignUp = async () => {\r\n    try {\r\n      const { error: authError } = await supabase.auth.signInWithOAuth({\r\n        provider: \"google\",\r\n        options: {\r\n          redirectTo: `${window.location.origin}/auth/callback`,\r\n        },\r\n      });\r\n\r\n      if (authError) {\r\n        setError(authError.message);\r\n        setShowToast(true);\r\n      }\r\n    } catch (err) {\r\n      const error = err as AuthError;\r\n      setError(error.message);\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async (formData: FormData) => {\r\n    try {\r\n      await signup(formData);\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      if (error.message.includes(\"User already registered\")) {\r\n        setError(\r\n          \"An account with this email already exists. Please sign in instead.\"\r\n        );\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n      setShowToast(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n      {showToast && error && (\r\n        <ToastNotification\r\n          message={error}\r\n          type=\"error\"\r\n          onClose={() => setShowToast(false)}\r\n        />\r\n      )}\r\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-lg\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900\">\r\n            Create an account\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">Sign up to get started</p>\r\n        </div>\r\n\r\n        <form action={handleSignUp} className=\"mt-8 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"confirmPassword\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"terms\"\r\n              name=\"terms\"\r\n              type=\"checkbox\"\r\n              required\r\n              className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n            />\r\n            <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\r\n              I agree to the{\" \"}\r\n              <a\r\n                href=\"#\"\r\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                Terms of Service\r\n              </a>{\" \"}\r\n              and{\" \"}\r\n              <a\r\n                href=\"#\"\r\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                Privacy Policy\r\n              </a>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-transform hover:scale-[1.02] active:scale-[0.98]\"\r\n            >\r\n              Create account\r\n            </button>\r\n\r\n            <div className=\"text-center\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                Already have an account?{\" \"}\r\n                <Link\r\n                  href=\"/login\"\r\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  Sign in\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"mt-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm\">\r\n              <span className=\"px-2 bg-white text-gray-500\">\r\n                Or continue with\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 grid grid-cols-2 gap-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleGoogleSignUp}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n            >\r\n              <FaGoogle className=\"w-5 h-5\" />\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => signInWithMicrosoft()}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n            >\r\n              <FaMicrosoft className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}