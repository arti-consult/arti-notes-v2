{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/utils/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from \"@supabase/ssr\";\r\n\r\nexport function createClient() {\r\n  return createBrowserClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/contexts/OnboardingContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useReducer,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  OnboardingState,\r\n  OnboardingAction,\r\n  OnboardingFormData,\r\n} from \"@/types/onboarding\";\r\nimport { createClient } from \"@/utils/supabase/client\";\r\nimport { UTMParams } from \"@/utils/tracking/utm\";\r\n\r\ninterface OnboardingContextType {\r\n  state: OnboardingState;\r\n  dispatch: React.Dispatch<OnboardingAction>;\r\n  submitOnboarding: (userId: string) => Promise<void>;\r\n  requestMicPermission: () => Promise<boolean>;\r\n}\r\n\r\nconst initialState: OnboardingState = {\r\n  step: 1,\r\n  userType: null,\r\n  teamSize: null,\r\n  referralSource: null,\r\n  audioPurpose: null,\r\n  micPermission: null,\r\n  paymentCompleted: null,\r\n};\r\n\r\nconst OnboardingContext = createContext<OnboardingContextType | null>(null);\r\n\r\nconst onboardingReducer = (\r\n  state: OnboardingState,\r\n  action: OnboardingAction\r\n): OnboardingState => {\r\n  switch (action.type) {\r\n    case \"NEXT_STEP\":\r\n      return { ...state, step: state.step + 1 };\r\n    case \"PREV_STEP\":\r\n      return { ...state, step: Math.max(1, state.step - 1) };\r\n    case \"SET_USER_TYPE\":\r\n      return { ...state, userType: action.payload };\r\n    case \"SET_TEAM_SIZE\":\r\n      return { ...state, teamSize: action.payload };\r\n    case \"SET_REFERRAL_SOURCE\":\r\n      return { ...state, referralSource: action.payload };\r\n    case \"SET_AUDIO_PURPOSE\":\r\n      return { ...state, audioPurpose: action.payload };\r\n    case \"SET_MIC_PERMISSION\":\r\n      return { ...state, micPermission: action.payload };\r\n    case \"SET_PAYMENT_COMPLETED\":\r\n      return { ...state, paymentCompleted: action.payload };\r\n    case \"RESET\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const OnboardingProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [state, dispatch] = useReducer(onboardingReducer, initialState);\r\n  const supabase = createClient();\r\n\r\n  const requestMicPermission = useCallback(async (): Promise<boolean> => {\r\n    try {\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error(\"Browser does not support media devices\");\r\n      }\r\n\r\n      // Request microphone access\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n\r\n      // Stop all tracks immediately after permission is granted\r\n      stream.getTracks().forEach((track) => track.stop());\r\n\r\n      dispatch({ type: \"SET_MIC_PERMISSION\", payload: true });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Error requesting microphone permission:\", error);\r\n      dispatch({ type: \"SET_MIC_PERMISSION\", payload: false });\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const submitOnboarding = useCallback(\r\n    async (userId: string): Promise<void> => {\r\n      try {\r\n        if (\r\n          !state.userType ||\r\n          !state.teamSize ||\r\n          !state.referralSource ||\r\n          !state.audioPurpose ||\r\n          !state.paymentCompleted\r\n        ) {\r\n          throw new Error(\"Missing required onboarding information\");\r\n        }\r\n\r\n        const onboardingData: OnboardingFormData = {\r\n          userId,\r\n          userType: state.userType,\r\n          teamSize: state.teamSize,\r\n          referralSource: state.referralSource,\r\n          audioPurpose: state.audioPurpose,\r\n          micPermission: state.micPermission ?? false,\r\n          paymentCompleted: state.paymentCompleted,\r\n        };\r\n\r\n        // Get UTM data from cookies if available\r\n        let utmData: UTMParams = {};\r\n        try {\r\n          if (typeof window !== \"undefined\") {\r\n            // Dynamically import to avoid SSR issues\r\n            const { getAllTrackingData } = await import(\"@/utils/tracking/utm\");\r\n            utmData = await getAllTrackingData();\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error getting UTM data:\", err);\r\n        }\r\n\r\n        // Save onboarding data to Supabase\r\n        const { data, error } = await supabase\r\n          .from(\"user_onboarding\")\r\n          .upsert({\r\n            user_id: userId,\r\n            user_type: onboardingData.userType,\r\n            team_size: onboardingData.teamSize,\r\n            referral_source: onboardingData.referralSource,\r\n            audio_purpose: onboardingData.audioPurpose,\r\n            mic_permission: onboardingData.micPermission,\r\n            payment_completed: onboardingData.paymentCompleted,\r\n            utm_source: utmData.utm_source || null,\r\n            utm_medium: utmData.utm_medium || null,\r\n            utm_campaign: utmData.utm_campaign || null,\r\n            referrer: utmData.referrer || null,\r\n            completed_at: new Date().toISOString(),\r\n          })\r\n          .select(\"id\")\r\n          .single();\r\n\r\n        if (error) throw error;\r\n\r\n        if (data?.id) {\r\n          // Link tracking data to onboarding data\r\n          try {\r\n            // Dynamically import server utility\r\n            const { saveUTMDataDuringOnboarding } = await import(\r\n              \"@/utils/tracking/server\"\r\n            );\r\n            await saveUTMDataDuringOnboarding(userId, data.id);\r\n          } catch (err) {\r\n            console.error(\"Error linking tracking data:\", err);\r\n            // Non-fatal error, continue\r\n          }\r\n        }\r\n\r\n        // Reset the state after successful submission\r\n        dispatch({ type: \"RESET\" });\r\n      } catch (error) {\r\n        console.error(\"Error submitting onboarding data:\", error);\r\n        throw error;\r\n      }\r\n    },\r\n    [state, supabase]\r\n  );\r\n\r\n  const value = {\r\n    state,\r\n    dispatch,\r\n    submitOnboarding,\r\n    requestMicPermission,\r\n  };\r\n\r\n  return (\r\n    <OnboardingContext.Provider value={value}>\r\n      {children}\r\n    </OnboardingContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useOnboarding = () => {\r\n  const context = useContext(OnboardingContext);\r\n  if (!context) {\r\n    throw new Error(\"useOnboarding must be used within an OnboardingProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAWA;AAbA;;;;AAuBA,MAAM,eAAgC;IACpC,MAAM;IACN,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,kBAAkB;AACpB;AAEA,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAEtE,MAAM,oBAAoB,CACxB,OACA;IAEA,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,MAAM,IAAI,GAAG;YAAE;QAC1C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,KAAK,GAAG,CAAC,GAAG,MAAM,IAAI,GAAG;YAAG;QACvD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YAAC;QAC9C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YAAC;QAC9C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,gBAAgB,OAAO,OAAO;YAAC;QACpD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,cAAc,OAAO,OAAO;YAAC;QAClD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,eAAe,OAAO,OAAO;YAAC;QACnD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,kBAAkB,OAAO,OAAO;YAAC;QACtD,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,MAAM,qBAA8D,CAAC,EAC1E,QAAQ,EACT;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB;IACxD,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAE5B,MAAM,uBAAuB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACvC,IAAI;YACF,IAAI,CAAC,UAAU,YAAY,IAAI,CAAC,UAAU,YAAY,CAAC,YAAY,EAAE;gBACnE,MAAM,IAAI,MAAM;YAClB;YAEA,4BAA4B;YAC5B,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAAE,OAAO;YAAK;YAEvE,0DAA0D;YAC1D,OAAO,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;YAEhD,SAAS;gBAAE,MAAM;gBAAsB,SAAS;YAAK;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,SAAS;gBAAE,MAAM;gBAAsB,SAAS;YAAM;YACtD,OAAO;QACT;IACF,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACjC,OAAO;QACL,IAAI;YACF,IACE,CAAC,MAAM,QAAQ,IACf,CAAC,MAAM,QAAQ,IACf,CAAC,MAAM,cAAc,IACrB,CAAC,MAAM,YAAY,IACnB,CAAC,MAAM,gBAAgB,EACvB;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,iBAAqC;gBACzC;gBACA,UAAU,MAAM,QAAQ;gBACxB,UAAU,MAAM,QAAQ;gBACxB,gBAAgB,MAAM,cAAc;gBACpC,cAAc,MAAM,YAAY;gBAChC,eAAe,MAAM,aAAa,IAAI;gBACtC,kBAAkB,MAAM,gBAAgB;YAC1C;YAEA,yCAAyC;YACzC,IAAI,UAAqB,CAAC;YAC1B,IAAI;gBACF,uCAAmC;;gBAInC;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;YAEA,mCAAmC;YACnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,mBACL,MAAM,CAAC;gBACN,SAAS;gBACT,WAAW,eAAe,QAAQ;gBAClC,WAAW,eAAe,QAAQ;gBAClC,iBAAiB,eAAe,cAAc;gBAC9C,eAAe,eAAe,YAAY;gBAC1C,gBAAgB,eAAe,aAAa;gBAC5C,mBAAmB,eAAe,gBAAgB;gBAClD,YAAY,QAAQ,UAAU,IAAI;gBAClC,YAAY,QAAQ,UAAU,IAAI;gBAClC,cAAc,QAAQ,YAAY,IAAI;gBACtC,UAAU,QAAQ,QAAQ,IAAI;gBAC9B,cAAc,IAAI,OAAO,WAAW;YACtC,GACC,MAAM,CAAC,MACP,MAAM;YAET,IAAI,OAAO,MAAM;YAEjB,IAAI,MAAM,IAAI;gBACZ,wCAAwC;gBACxC,IAAI;oBACF,oCAAoC;oBACpC,MAAM,EAAE,2BAA2B,EAAE,GAAG;oBAGxC,MAAM,4BAA4B,QAAQ,KAAK,EAAE;gBACnD,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,4BAA4B;gBAC9B;YACF;YAEA,8CAA8C;YAC9C,SAAS;gBAAE,MAAM;YAAQ;QAC3B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,MAAM;QACR;IACF,GACA;QAAC;QAAO;KAAS;IAGnB,MAAM,QAAQ;QACZ;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,kBAAkB,QAAQ;QAAC,OAAO;kBAChC;;;;;;AAGP;AAEO,MAAM,gBAAgB;IAC3B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/%28auth%29/onboarding/layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { OnboardingProvider } from \"@/contexts/OnboardingContext\";\r\n\r\nexport default function OnboardingLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen overflow-hidden\">\r\n      <OnboardingProvider>{children}</OnboardingProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,qIAAA,CAAA,qBAAkB;sBAAE;;;;;;;;;;;AAG3B","debugId":null}}]
}