{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/contexts/OnboardingContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useReducer, ReactNode } from \"react\";\r\n\r\n// Types - simplified without payment fields\r\ninterface OnboardingState {\r\n  step: number;\r\n  userType: \"individual\" | \"company\" | null;\r\n  teamSize: \"solo\" | \"small\" | \"medium\" | \"large\" | null;\r\n  referralSource: string | null;\r\n  audioPurpose: string | null;\r\n}\r\n\r\ntype OnboardingAction =\r\n  | { type: \"NEXT_STEP\" }\r\n  | { type: \"PREV_STEP\" }\r\n  | { type: \"SET_STEP\"; payload: number }\r\n  | { type: \"SET_USER_TYPE\"; payload: \"individual\" | \"company\" }\r\n  | { type: \"SET_TEAM_SIZE\"; payload: \"solo\" | \"small\" | \"medium\" | \"large\" }\r\n  | { type: \"SET_REFERRAL_SOURCE\"; payload: string }\r\n  | { type: \"SET_AUDIO_PURPOSE\"; payload: string }\r\n  | { type: \"RESET\" };\r\n\r\ninterface OnboardingContextType {\r\n  state: OnboardingState;\r\n  dispatch: React.Dispatch<OnboardingAction>;\r\n  submitOnboarding: (userId: string) => Promise<void>;\r\n}\r\n\r\n// Initial state - simplified\r\nconst initialState: OnboardingState = {\r\n  step: 1,\r\n  userType: null,\r\n  teamSize: null,\r\n  referralSource: null,\r\n  audioPurpose: null,\r\n};\r\n\r\n// Reducer - simplified\r\nfunction onboardingReducer(\r\n  state: OnboardingState,\r\n  action: OnboardingAction\r\n): OnboardingState {\r\n  switch (action.type) {\r\n    case \"NEXT_STEP\":\r\n      return { ...state, step: Math.min(state.step + 1, 5) }; // Changed max to 5\r\n    case \"PREV_STEP\":\r\n      return { ...state, step: Math.max(state.step - 1, 1) };\r\n    case \"SET_STEP\":\r\n      return { ...state, step: action.payload };\r\n    case \"SET_USER_TYPE\":\r\n      return { ...state, userType: action.payload };\r\n    case \"SET_TEAM_SIZE\":\r\n      return { ...state, teamSize: action.payload };\r\n    case \"SET_REFERRAL_SOURCE\":\r\n      return { ...state, referralSource: action.payload };\r\n    case \"SET_AUDIO_PURPOSE\":\r\n      return { ...state, audioPurpose: action.payload };\r\n    case \"RESET\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context\r\nconst OnboardingContext = createContext<OnboardingContextType | undefined>(\r\n  undefined\r\n);\r\n\r\n// Provider component\r\nexport function OnboardingProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(onboardingReducer, initialState);\r\n\r\n  const submitOnboarding = async (userId: string): Promise<void> => {\r\n    try {\r\n      // Create FormData with onboarding information\r\n      const formData = new FormData();\r\n      formData.append(\"userType\", state.userType || \"\");\r\n      formData.append(\"teamSize\", state.teamSize || \"\");\r\n      formData.append(\"referralSource\", state.referralSource || \"\");\r\n      formData.append(\"audioPurpose\", state.audioPurpose || \"\");\r\n      formData.append(\"paymentCompleted\", \"true\"); // Payment already completed\r\n      formData.append(\"micPermission\", \"true\"); // Default to true for simplified flow\r\n\r\n      // Import the server action dynamically to avoid SSR issues\r\n      const { completeOnboarding } = await import(\r\n        \"../app/(auth)/onboarding/actions\"\r\n      );\r\n\r\n      // Call the server action\r\n      const result = await completeOnboarding(formData);\r\n\r\n      // Handle any errors returned from the server action\r\n      if (result && \"error\" in result) {\r\n        throw new Error(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting onboarding:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: OnboardingContextType = {\r\n    state,\r\n    dispatch,\r\n    submitOnboarding,\r\n  };\r\n\r\n  return (\r\n    <OnboardingContext.Provider value={value}>\r\n      {children}\r\n    </OnboardingContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook to use the context\r\nexport function useOnboarding(): OnboardingContextType {\r\n  const context = useContext(OnboardingContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useOnboarding must be used within an OnboardingProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AA6BA,6BAA6B;AAC7B,MAAM,eAAgC;IACpC,MAAM;IACN,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,cAAc;AAChB;AAEA,uBAAuB;AACvB,SAAS,kBACP,KAAsB,EACtB,MAAwB;IAExB,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG;YAAG,GAAG,mBAAmB;QAC7E,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG;YAAG;QACvD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,OAAO,OAAO;YAAC;QAC1C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YAAC;QAC9C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YAAC;QAC9C,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,gBAAgB,OAAO,OAAO;YAAC;QACpD,KAAK;YACH,OAAO;gBAAE,GAAG,KAAK;gBAAE,cAAc,OAAO,OAAO;YAAC;QAClD,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA,UAAU;AACV,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EACpC;AAIK,SAAS,mBAAmB,EAAE,QAAQ,EAA2B;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB;IAExD,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,8CAA8C;YAC9C,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,YAAY,MAAM,QAAQ,IAAI;YAC9C,SAAS,MAAM,CAAC,YAAY,MAAM,QAAQ,IAAI;YAC9C,SAAS,MAAM,CAAC,kBAAkB,MAAM,cAAc,IAAI;YAC1D,SAAS,MAAM,CAAC,gBAAgB,MAAM,YAAY,IAAI;YACtD,SAAS,MAAM,CAAC,oBAAoB,SAAS,4BAA4B;YACzE,SAAS,MAAM,CAAC,iBAAiB,SAAS,sCAAsC;YAEhF,2DAA2D;YAC3D,MAAM,EAAE,kBAAkB,EAAE,GAAG;YAI/B,yBAAyB;YACzB,MAAM,SAAS,MAAM,mBAAmB;YAExC,oDAAoD;YACpD,IAAI,UAAU,WAAW,QAAQ;gBAC/B,MAAM,IAAI,MAAM,OAAO,KAAK;YAC9B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;IAEA,MAAM,QAA+B;QACnC;QACA;QACA;IACF;IAEA,qBACE,8OAAC,kBAAkB,QAAQ;QAAC,OAAO;kBAChC;;;;;;AAGP;AAGO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/%28auth%29/onboarding/layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { OnboardingProvider } from \"@/contexts/OnboardingContext\";\r\n\r\nexport default function OnboardingLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen overflow-hidden\">\r\n      <OnboardingProvider>{children}</OnboardingProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,qIAAA,CAAA,qBAAkB;sBAAE;;;;;;;;;;;AAG3B","debugId":null}}]
}