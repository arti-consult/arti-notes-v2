{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport async function createClient() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: any) {\n          cookieStore.set({ name, value, ...options });\n        },\n        remove(name: string, options: any) {\n          cookieStore.set({ name, value: \"\", ...options });\n        },\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/utils/tracking/constants.ts"],"sourcesContent":["// src/utils/tracking/constants.ts\n\n// Cookie names\nexport const UTM_COOKIE_NAME = \"arti_utm_data\";\nexport const VISIT_COOKIE_NAME = \"arti_visit_data\";\nexport const ANONYMOUS_ID_COOKIE = \"arti_anonymous_id\";\n\n// Cookie settings\nexport const COOKIE_OPTIONS = {\n  expires: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n  path: \"/\",\n  sameSite: \"lax\" as const,\n  secure: process.env.NODE_ENV === \"production\",\n};\n"],"names":[],"mappings":"AAAA,kCAAkC;AAElC,eAAe;;;;;;;AACR,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAC1B,MAAM,sBAAsB;AAG5B,MAAM,iBAAiB;IAC5B,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK;IACnD,MAAM;IACN,UAAU;IACV,QAAQ,oDAAyB;AACnC","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/utils/tracking/server.ts"],"sourcesContent":["\"use server\";\n\n// src/utils/tracking/server.ts\nimport { createClient } from \"@/utils/supabase/server\";\nimport { cookies } from \"next/headers\";\nimport { UTMParams } from \"./utm\";\nimport {\n  UTM_COOKIE_NAME,\n  VISIT_COOKIE_NAME,\n  ANONYMOUS_ID_COOKIE,\n  COOKIE_OPTIONS,\n} from \"./constants\";\n\n/**\n * Get cookie store, handling both Pages Router and App Router\n */\nasync function getCookieStore() {\n  const cookieStore = cookies();\n  return cookieStore instanceof Promise ? await cookieStore : cookieStore;\n}\n\n/**\n * Link anonymous tracking data to a user after they sign up or log in\n */\nexport async function linkTrackingDataToUser(userId: string): Promise<void> {\n  try {\n    const supabase = await createClient();\n    const cookieStore = await getCookieStore();\n\n    // Get anonymous ID from cookies\n    const anonymousId = cookieStore.get(ANONYMOUS_ID_COOKIE)?.value;\n\n    if (!anonymousId) {\n      return;\n    }\n\n    // Update all tracking data records with this anonymous ID to link to the user\n    await supabase\n      .from(\"tracking_data\")\n      .update({ user_id: userId })\n      .eq(\"anonymous_id\", anonymousId)\n      .is(\"user_id\", null);\n  } catch (error) {\n    console.error(\"Error linking tracking data to user:\", error);\n  }\n}\n\n/**\n * Get the latest tracking data for a user\n */\nexport async function getUserTrackingData(userId: string) {\n  try {\n    const supabase = await createClient();\n\n    const { data, error } = await supabase\n      .from(\"tracking_data\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .order(\"created_at\", { ascending: false })\n      .limit(1)\n      .single();\n\n    if (error) {\n      console.error(\"Error getting user tracking data:\", error);\n      return null;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error getting user tracking data:\", error);\n    return null;\n  }\n}\n\n/**\n * Save UTM data during onboarding\n */\nexport async function saveUTMDataDuringOnboarding(\n  userId: string,\n  onboardingId: string\n): Promise<void> {\n  try {\n    const supabase = await createClient();\n\n    // Get latest tracking data for the user\n    const trackingData = await getUserTrackingData(userId);\n\n    if (!trackingData) return;\n\n    // Update onboarding record with UTM data\n    await supabase\n      .from(\"user_onboarding\")\n      .update({\n        tracking_data_id: trackingData.id,\n        utm_source: trackingData.utm_source,\n        utm_medium: trackingData.utm_medium,\n        utm_campaign: trackingData.utm_campaign,\n        referrer: trackingData.referrer,\n      })\n      .eq(\"id\", onboardingId);\n  } catch (error) {\n    console.error(\"Error saving UTM data during onboarding:\", error);\n  }\n}\n\n/**\n * Get UTM data from cookie on the server\n */\nexport async function getServerUTMData(): Promise<UTMParams | null> {\n  try {\n    const cookieStore = await getCookieStore();\n    const utmData = cookieStore.get(UTM_COOKIE_NAME);\n    return utmData ? JSON.parse(utmData.value) : null;\n  } catch (error) {\n    console.error(\"Error getting server UTM data:\", error);\n    return null;\n  }\n}\n\n/**\n * Get visit data from cookie on the server\n */\nexport async function getServerVisitData(): Promise<{\n  first_visit?: string;\n  referrer?: string;\n  landing_page?: string;\n} | null> {\n  try {\n    const cookieStore = await getCookieStore();\n    const visitData = cookieStore.get(VISIT_COOKIE_NAME);\n    return visitData ? JSON.parse(visitData.value) : null;\n  } catch (error) {\n    console.error(\"Error getting server visit data:\", error);\n    return null;\n  }\n}\n\n/**\n * Get anonymous ID from cookie on the server\n */\nexport async function getServerAnonymousId(): Promise<string | null> {\n  try {\n    const cookieStore = await getCookieStore();\n    const anonymousId = cookieStore.get(ANONYMOUS_ID_COOKIE);\n    return anonymousId ? anonymousId.value : null;\n  } catch (error) {\n    console.error(\"Error getting server anonymous ID:\", error);\n    return null;\n  }\n}\n\n/**\n * Get all tracking data from cookies on the server\n */\nexport async function getServerTrackingData(): Promise<{\n  utmData: UTMParams | null;\n  visitData: {\n    first_visit?: string;\n    referrer?: string;\n    landing_page?: string;\n  } | null;\n  anonymousId: string | null;\n}> {\n  const [utmData, visitData, anonymousId] = await Promise.all([\n    getServerUTMData(),\n    getServerVisitData(),\n    getServerAnonymousId(),\n  ]);\n\n  return {\n    utmData,\n    visitData,\n    anonymousId,\n  };\n}\n\n/**\n * Set UTM data in cookie on the server\n */\nexport async function setServerUTMData(data: UTMParams): Promise<void> {\n  try {\n    const cookieStore = await getCookieStore();\n    cookieStore.set(UTM_COOKIE_NAME, JSON.stringify(data), COOKIE_OPTIONS);\n  } catch (error) {\n    console.error(\"Error setting server UTM data:\", error);\n  }\n}\n\n/**\n * Set visit data in cookie on the server\n */\nexport async function setServerVisitData(data: {\n  first_visit: string;\n  referrer?: string;\n  landing_page: string;\n}): Promise<void> {\n  try {\n    const cookieStore = await getCookieStore();\n    cookieStore.set(VISIT_COOKIE_NAME, JSON.stringify(data), COOKIE_OPTIONS);\n  } catch (error) {\n    console.error(\"Error setting server visit data:\", error);\n  }\n}\n\n/**\n * Set anonymous ID in cookie on the server\n */\nexport async function setServerAnonymousId(id: string): Promise<void> {\n  try {\n    const cookieStore = await getCookieStore();\n    cookieStore.set(ANONYMOUS_ID_COOKIE, id, {\n      ...COOKIE_OPTIONS,\n      expires: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 year\n    });\n  } catch (error) {\n    console.error(\"Error setting server anonymous ID:\", error);\n  }\n}\n\n/**\n * Clear all tracking cookies on the server\n */\nexport async function clearServerTrackingCookies(): Promise<void> {\n  try {\n    const cookieStore = await getCookieStore();\n    cookieStore.delete(UTM_COOKIE_NAME);\n    cookieStore.delete(VISIT_COOKIE_NAME);\n    cookieStore.delete(ANONYMOUS_ID_COOKIE);\n  } catch (error) {\n    console.error(\"Error clearing server tracking cookies:\", error);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/app/%28auth%29/onboarding/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/onboarding/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/onboarding/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/app/%28auth%29/onboarding/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/onboarding/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/onboarding/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}