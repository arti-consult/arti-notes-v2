{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/%28auth%29/onboarding/actions.ts"],"sourcesContent":["// src/app/(auth)/onboarding/actions.ts\r\n\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function updateProfile(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  const {\r\n    data: { user },\r\n    error: userError,\r\n  } = await supabase.auth.getUser();\r\n\r\n  if (userError || !user) {\r\n    redirect(\"/login\");\r\n  }\r\n\r\n  const { error } = await supabase.from(\"profiles\").upsert({\r\n    id: user.id,\r\n    full_name: formData.get(\"fullName\") as string,\r\n    username: formData.get(\"username\") as string,\r\n    bio: formData.get(\"bio\") as string,\r\n    updated_at: new Date().toISOString(),\r\n  });\r\n\r\n  if (error) {\r\n    redirect(\"/error?message=\" + encodeURIComponent(error.message));\r\n  }\r\n\r\n  revalidatePath(\"/\", \"layout\");\r\n  redirect(\"/dashboard\");\r\n}\r\n\r\nexport async function completeOnboarding(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  const {\r\n    data: { user },\r\n    error: userError,\r\n  } = await supabase.auth.getUser();\r\n\r\n  if (userError || !user) {\r\n    redirect(\"/login\");\r\n  }\r\n\r\n  // Extract form data - simplified to just the two questions\r\n  const userType = formData.get(\"userType\") as string;\r\n  const referralSource = formData.get(\"referralSource\") as string;\r\n  const paymentCompleted = formData.get(\"paymentCompleted\") === \"true\";\r\n\r\n  // Set default values for fields we no longer ask about\r\n  const teamSize = null; // No longer asking this\r\n  const audioPurpose = null; // No longer asking this\r\n  const micPermission = true; // Default to true\r\n\r\n  try {\r\n    // Check if onboarding record already exists\r\n    const { data: existingOnboarding } = await supabase\r\n      .from(\"user_onboarding\")\r\n      .select(\"*\")\r\n      .eq(\"user_id\", user.id)\r\n      .single();\r\n\r\n    const onboardingData = {\r\n      user_id: user.id,\r\n      answers: {\r\n        userType,\r\n        referralSource,\r\n        // Keep the structure but set defaults for removed fields\r\n        teamSize: null,\r\n        audioPurpose: null,\r\n        micPermission,\r\n      },\r\n      payment_completed: paymentCompleted,\r\n      user_type: userType,\r\n      team_size: teamSize,\r\n      referral_source: referralSource,\r\n      audio_purpose: audioPurpose,\r\n      mic_permission: micPermission,\r\n      // Don't set completed_at yet - that happens in finalizeOnboarding\r\n      updated_at: new Date().toISOString(),\r\n    };\r\n\r\n    let onboardingError;\r\n\r\n    if (existingOnboarding) {\r\n      // Update existing record\r\n      const { error } = await supabase\r\n        .from(\"user_onboarding\")\r\n        .update(onboardingData)\r\n        .eq(\"user_id\", user.id);\r\n      onboardingError = error;\r\n    } else {\r\n      // Insert new record (shouldn't happen in normal flow, but handle it)\r\n      const { error } = await supabase.from(\"user_onboarding\").insert({\r\n        ...onboardingData,\r\n        payment_link_tag: user.user_metadata?.payment_link_tag || null,\r\n      });\r\n      onboardingError = error;\r\n    }\r\n\r\n    if (onboardingError) {\r\n      console.error(\"Onboarding error:\", onboardingError);\r\n      return { error: onboardingError.message };\r\n    }\r\n\r\n    // Update user profile if needed\r\n    const { error: profileError } = await supabase.from(\"profiles\").upsert({\r\n      id: user.id,\r\n      onboarding_completed: false, // Set to false since calendar connection is still needed\r\n      updated_at: new Date().toISOString(),\r\n    });\r\n\r\n    if (profileError) {\r\n      console.error(\"Profile update error:\", profileError);\r\n      // Don't return error here as onboarding data was saved successfully\r\n    }\r\n\r\n    console.log(\"✅ Onboarding answers saved successfully for user:\", user.id, {\r\n      userType,\r\n      referralSource,\r\n    });\r\n\r\n    revalidatePath(\"/\", \"layout\");\r\n\r\n    // Don't redirect here - let the frontend handle the redirect to calendar connection\r\n    return { success: true, message: \"Answers submitted successfully\" };\r\n  } catch (error) {\r\n    console.error(\"Unexpected error during onboarding:\", error);\r\n    return {\r\n      error:\r\n        error instanceof Error ? error.message : \"An unexpected error occurred\",\r\n    };\r\n  }\r\n}\r\n\r\nexport async function checkPaymentStatus(userId: string) {\r\n  const supabase = await createClient();\r\n\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from(\"user_onboarding\")\r\n      .select(\"payment_completed, payment_link_tag\")\r\n      .eq(\"user_id\", userId)\r\n      .single();\r\n\r\n    if (error && error.code !== \"PGRST116\") {\r\n      // PGRST116 = Row not found\r\n      throw error;\r\n    }\r\n\r\n    return {\r\n      paymentCompleted: data?.payment_completed || false,\r\n      paymentLinkTag: data?.payment_link_tag || null,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error checking payment status:\", error);\r\n    return {\r\n      paymentCompleted: false,\r\n      paymentLinkTag: null,\r\n      error:\r\n        error instanceof Error\r\n          ? error.message\r\n          : \"Failed to check payment status\",\r\n    };\r\n  }\r\n}\r\n\r\n// Function to mark onboarding as fully completed (after calendar connection)\r\nexport async function finalizeOnboarding(userId: string) {\r\n  const supabase = await createClient();\r\n\r\n  try {\r\n    // Update the onboarding record to mark it as completed\r\n    const { error } = await supabase\r\n      .from(\"user_onboarding\")\r\n      .update({\r\n        completed_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq(\"user_id\", userId);\r\n\r\n    if (error) {\r\n      console.error(\"Error finalizing onboarding:\", error);\r\n      return { error: error.message };\r\n    }\r\n\r\n    // Update the profile to mark onboarding as completed\r\n    const { error: profileError } = await supabase\r\n      .from(\"profiles\")\r\n      .update({\r\n        onboarding_completed: true,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq(\"id\", userId);\r\n\r\n    if (profileError) {\r\n      console.error(\"Error updating profile onboarding status:\", profileError);\r\n      // Don't return error here as the main onboarding was completed\r\n    }\r\n\r\n    console.log(\"✅ Onboarding finalized successfully for user:\", userId);\r\n\r\n    revalidatePath(\"/\", \"layout\");\r\n    redirect(\"/dashboard\");\r\n  } catch (error) {\r\n    console.error(\"Unexpected error finalizing onboarding:\", error);\r\n    return {\r\n      error:\r\n        error instanceof Error ? error.message : \"An unexpected error occurred\",\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/.next-internal/server/app/%28auth%29/onboarding/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {createClient as '006833ae4a3e4bc312b0517f93af9f917ebef44fad'} from 'ACTIONS_MODULE0'\nexport {updateProfile as '40456e47ffa0d243b28358a525af33782f47e31018'} from 'ACTIONS_MODULE1'\nexport {completeOnboarding as '4017f1ee2c245e3435c2d9ce91fa88e32e84fe98b9'} from 'ACTIONS_MODULE1'\nexport {checkPaymentStatus as '40408aa358ff3c32694cfde6f469fcf704c3cdfddb'} from 'ACTIONS_MODULE1'\nexport {finalizeOnboarding as '40c8632f0a4e1d9841b0ab68b681b842e51af6ea9f'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/%28auth%29/onboarding/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/onboarding/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/onboarding/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/%28auth%29/onboarding/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/onboarding/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/onboarding/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}