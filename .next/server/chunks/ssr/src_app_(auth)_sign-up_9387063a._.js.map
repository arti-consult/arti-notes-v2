{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  const password = formData.get('password') as string\r\n  const confirmPassword = formData.get('confirmPassword') as string\r\n\r\n  // Validate password match\r\n  if (password !== confirmPassword) {\r\n    redirect('/error?message=Passwords do not match')\r\n  }\r\n\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: password,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/onboarding')\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'google',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n} "],"names":[],"mappings":";;;;;;IAOsB,SAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  const password = formData.get('password') as string\r\n  const confirmPassword = formData.get('confirmPassword') as string\r\n\r\n  // Validate password match\r\n  if (password !== confirmPassword) {\r\n    redirect('/error?message=Passwords do not match')\r\n  }\r\n\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: password,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/onboarding')\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'google',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n} "],"names":[],"mappings":";;;;;;IAiCsB,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  const password = formData.get('password') as string\r\n  const confirmPassword = formData.get('confirmPassword') as string\r\n\r\n  // Validate password match\r\n  if (password !== confirmPassword) {\r\n    redirect('/error?message=Passwords do not match')\r\n  }\r\n\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: password,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/onboarding')\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'google',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient()\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  })\r\n\r\n  if (error) {\r\n    redirect('/error?message=' + encodeURIComponent(error.message))\r\n  }\r\n} "],"names":[],"mappings":";;;;;;IA+CsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { signup, signInWithGoogle, signInWithMicrosoft } from \"./actions\";\nimport { FaGoogle, FaMicrosoft } from \"react-icons/fa\";\n\nexport default function SignUpPage() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-lg\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">Join us to get started</p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"confirmPassword\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Confirm Password\n              </label>\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              id=\"terms\"\n              name=\"terms\"\n              type=\"checkbox\"\n              required\n              className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\n              I agree to the{\" \"}\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n              >\n                Terms of Service\n              </a>{\" \"}\n              and{\" \"}\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n              >\n                Privacy Policy\n              </a>\n            </label>\n          </div>\n\n          <div className=\"space-y-4\">\n            <button\n              formAction={signup}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-transform hover:scale-[1.02] active:scale-[0.98]\"\n            >\n              Create account\n            </button>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Already have an account?{\" \"}\n                <a\n                  href=\"/login\"\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                >\n                  Sign in\n                </a>\n              </p>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"mt-6\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\" />\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">\n                Or continue with\n              </span>\n            </div>\n          </div>\n\n          <div className=\"mt-6 grid grid-cols-2 gap-3\">\n            <button\n              onClick={() => signInWithGoogle()}\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-transform hover:scale-[1.02] active:scale-[0.98]\"\n            >\n              <FaGoogle className=\"h-5 w-5\" />\n              <span className=\"ml-2\">Google</span>\n            </button>\n\n            <button\n              onClick={() => signInWithMicrosoft()}\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-transform hover:scale-[1.02] active:scale-[0.98]\"\n            >\n              <FaMicrosoft className=\"h-5 w-5\" />\n              <span className=\"ml-2\">Microsoft</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAGjD,8OAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;8BAG5C,8OAAC;oBAAK,WAAU;;sCACd,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CACC,SAAQ;4CACR,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC;4CACC,SAAQ;4CACR,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC;4CACC,SAAQ;4CACR,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,QAAQ;4CACR,WAAU;;;;;;;;;;;;;;;;;;sCAKhB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,MAAK;oCACL,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC;oCAAM,SAAQ;oCAAQ,WAAU;;wCAAmC;wCACnD;sDACf,8OAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;wCAEI;wCAAI;wCACL;sDACJ,8OAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;sCAML,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,YAAY,4KAAA,CAAA,SAAM;oCAClB,WAAU;8CACX;;;;;;8CAID,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;;4CAAwB;4CACV;0DACzB,8OAAC;gDACC,MAAK;gDACL,WAAU;0DACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQT,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;;;;;;;;;;8CAEjB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAK,WAAU;kDAA8B;;;;;;;;;;;;;;;;;sCAMlD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAM,CAAA,GAAA,4KAAA,CAAA,mBAAgB,AAAD;oCAC9B,WAAU;;sDAEV,8OAAC,8IAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;8CAGzB,8OAAC;oCACC,SAAS,IAAM,CAAA,GAAA,4KAAA,CAAA,sBAAmB,AAAD;oCACjC,WAAU;;sDAEV,8OAAC,8IAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrC","debugId":null}}]
}