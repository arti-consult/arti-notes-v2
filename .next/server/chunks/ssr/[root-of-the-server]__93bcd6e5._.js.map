{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          cookieStore.set({ name, value, ...options });\r\n        },\r\n        remove(name: string, options: any) {\r\n          cookieStore.set({ name, value: \"\", ...options });\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/utils/tracking/constants.ts"],"sourcesContent":["// src/utils/tracking/constants.ts\r\n\r\n// Cookie names\r\nexport const UTM_COOKIE_NAME = \"arti_utm_data\";\r\nexport const VISIT_COOKIE_NAME = \"arti_visit_data\";\r\nexport const ANONYMOUS_ID_COOKIE = \"arti_anonymous_id\";\r\n\r\n// Cookie settings\r\nexport const COOKIE_OPTIONS = {\r\n  expires: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\r\n  path: \"/\",\r\n  sameSite: \"lax\" as const,\r\n  secure: process.env.NODE_ENV === \"production\",\r\n};\r\n"],"names":[],"mappings":"AAAA,kCAAkC;AAElC,eAAe;;;;;;;AACR,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAC1B,MAAM,sBAAsB;AAG5B,MAAM,iBAAiB;IAC5B,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK;IACnD,MAAM;IACN,UAAU;IACV,QAAQ,oDAAyB;AACnC","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/utils/tracking/server.ts"],"sourcesContent":["\"use server\";\r\n\r\n// src/utils/tracking/server.ts\r\nimport { createClient } from \"@/utils/supabase/server\";\r\nimport { cookies } from \"next/headers\";\r\nimport { UTMParams } from \"./utm\";\r\nimport {\r\n  UTM_COOKIE_NAME,\r\n  VISIT_COOKIE_NAME,\r\n  ANONYMOUS_ID_COOKIE,\r\n  COOKIE_OPTIONS,\r\n} from \"./constants\";\r\n\r\n/**\r\n * Get cookie store, handling both Pages Router and App Router\r\n */\r\nasync function getCookieStore() {\r\n  const cookieStore = cookies();\r\n  return cookieStore instanceof Promise ? await cookieStore : cookieStore;\r\n}\r\n\r\n/**\r\n * Link anonymous tracking data to a user after they sign up or log in\r\n */\r\nexport async function linkTrackingDataToUser(userId: string): Promise<void> {\r\n  try {\r\n    const supabase = await createClient();\r\n    const cookieStore = await getCookieStore();\r\n\r\n    // Get anonymous ID from cookies\r\n    const anonymousId = cookieStore.get(ANONYMOUS_ID_COOKIE)?.value;\r\n\r\n    if (!anonymousId) {\r\n      return;\r\n    }\r\n\r\n    // Update all tracking data records with this anonymous ID to link to the user\r\n    await supabase\r\n      .from(\"tracking_data\")\r\n      .update({ user_id: userId })\r\n      .eq(\"anonymous_id\", anonymousId)\r\n      .is(\"user_id\", null);\r\n  } catch (error) {\r\n    console.error(\"Error linking tracking data to user:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Get the latest tracking data for a user\r\n */\r\nexport async function getUserTrackingData(userId: string) {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"tracking_data\")\r\n      .select(\"*\")\r\n      .eq(\"user_id\", userId)\r\n      .order(\"created_at\", { ascending: false })\r\n      .limit(1)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(\"Error getting user tracking data:\", error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error getting user tracking data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Save UTM data during onboarding\r\n */\r\nexport async function saveUTMDataDuringOnboarding(\r\n  userId: string,\r\n  onboardingId: string\r\n): Promise<void> {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    // Get latest tracking data for the user\r\n    const trackingData = await getUserTrackingData(userId);\r\n\r\n    if (!trackingData) return;\r\n\r\n    // Update onboarding record with UTM data\r\n    await supabase\r\n      .from(\"user_onboarding\")\r\n      .update({\r\n        tracking_data_id: trackingData.id,\r\n        utm_source: trackingData.utm_source,\r\n        utm_medium: trackingData.utm_medium,\r\n        utm_campaign: trackingData.utm_campaign,\r\n        referrer: trackingData.referrer,\r\n      })\r\n      .eq(\"id\", onboardingId);\r\n  } catch (error) {\r\n    console.error(\"Error saving UTM data during onboarding:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Get UTM data from cookie on the server\r\n */\r\nexport async function getServerUTMData(): Promise<UTMParams | null> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    const utmData = cookieStore.get(UTM_COOKIE_NAME);\r\n    return utmData ? JSON.parse(utmData.value) : null;\r\n  } catch (error) {\r\n    console.error(\"Error getting server UTM data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get visit data from cookie on the server\r\n */\r\nexport async function getServerVisitData(): Promise<{\r\n  first_visit?: string;\r\n  referrer?: string;\r\n  landing_page?: string;\r\n} | null> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    const visitData = cookieStore.get(VISIT_COOKIE_NAME);\r\n    return visitData ? JSON.parse(visitData.value) : null;\r\n  } catch (error) {\r\n    console.error(\"Error getting server visit data:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get anonymous ID from cookie on the server\r\n */\r\nexport async function getServerAnonymousId(): Promise<string | null> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    const anonymousId = cookieStore.get(ANONYMOUS_ID_COOKIE);\r\n    return anonymousId ? anonymousId.value : null;\r\n  } catch (error) {\r\n    console.error(\"Error getting server anonymous ID:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get all tracking data from cookies on the server\r\n */\r\nexport async function getServerTrackingData(): Promise<{\r\n  utmData: UTMParams | null;\r\n  visitData: {\r\n    first_visit?: string;\r\n    referrer?: string;\r\n    landing_page?: string;\r\n  } | null;\r\n  anonymousId: string | null;\r\n}> {\r\n  const [utmData, visitData, anonymousId] = await Promise.all([\r\n    getServerUTMData(),\r\n    getServerVisitData(),\r\n    getServerAnonymousId(),\r\n  ]);\r\n\r\n  return {\r\n    utmData,\r\n    visitData,\r\n    anonymousId,\r\n  };\r\n}\r\n\r\n/**\r\n * Set UTM data in cookie on the server\r\n */\r\nexport async function setServerUTMData(data: UTMParams): Promise<void> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    cookieStore.set(UTM_COOKIE_NAME, JSON.stringify(data), COOKIE_OPTIONS);\r\n  } catch (error) {\r\n    console.error(\"Error setting server UTM data:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Set visit data in cookie on the server\r\n */\r\nexport async function setServerVisitData(data: {\r\n  first_visit: string;\r\n  referrer?: string;\r\n  landing_page: string;\r\n}): Promise<void> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    cookieStore.set(VISIT_COOKIE_NAME, JSON.stringify(data), COOKIE_OPTIONS);\r\n  } catch (error) {\r\n    console.error(\"Error setting server visit data:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Set anonymous ID in cookie on the server\r\n */\r\nexport async function setServerAnonymousId(id: string): Promise<void> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    cookieStore.set(ANONYMOUS_ID_COOKIE, id, {\r\n      ...COOKIE_OPTIONS,\r\n      expires: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 year\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error setting server anonymous ID:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Clear all tracking cookies on the server\r\n */\r\nexport async function clearServerTrackingCookies(): Promise<void> {\r\n  try {\r\n    const cookieStore = await getCookieStore();\r\n    cookieStore.delete(UTM_COOKIE_NAME);\r\n    cookieStore.delete(VISIT_COOKIE_NAME);\r\n    cookieStore.delete(ANONYMOUS_ID_COOKIE);\r\n  } catch (error) {\r\n    console.error(\"Error clearing server tracking cookies:\", error);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,+BAA+B;AAC/B;AACA;AAEA;;;;;;;AAOA;;CAEC,GACD,eAAe;IACb,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,OAAO,uBAAuB,UAAU,MAAM,cAAc;AAC9D;AAKO,eAAe,uBAAuB,MAAc;IACzD,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAClC,MAAM,cAAc,MAAM;QAE1B,gCAAgC;QAChC,MAAM,cAAc,YAAY,GAAG,CAAC,qIAAA,CAAA,sBAAmB,GAAG;QAE1D,IAAI,CAAC,aAAa;YAChB;QACF;QAEA,8EAA8E;QAC9E,MAAM,SACH,IAAI,CAAC,iBACL,MAAM,CAAC;YAAE,SAAS;QAAO,GACzB,EAAE,CAAC,gBAAgB,aACnB,EAAE,CAAC,WAAW;IACnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;IACxD;AACF;AAKO,eAAe,oBAAoB,MAAc;IACtD,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,QACd,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM,GACvC,KAAK,CAAC,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,qCAAqC;YACnD,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;IACT;AACF;AAKO,eAAe,4BACpB,MAAc,EACd,YAAoB;IAEpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,wCAAwC;QACxC,MAAM,eAAe,MAAM,oBAAoB;QAE/C,IAAI,CAAC,cAAc;QAEnB,yCAAyC;QACzC,MAAM,SACH,IAAI,CAAC,mBACL,MAAM,CAAC;YACN,kBAAkB,aAAa,EAAE;YACjC,YAAY,aAAa,UAAU;YACnC,YAAY,aAAa,UAAU;YACnC,cAAc,aAAa,YAAY;YACvC,UAAU,aAAa,QAAQ;QACjC,GACC,EAAE,CAAC,MAAM;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4CAA4C;IAC5D;AACF;AAKO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,MAAM,UAAU,YAAY,GAAG,CAAC,qIAAA,CAAA,kBAAe;QAC/C,OAAO,UAAU,KAAK,KAAK,CAAC,QAAQ,KAAK,IAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF;AAKO,eAAe;IAKpB,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,MAAM,YAAY,YAAY,GAAG,CAAC,qIAAA,CAAA,oBAAiB;QACnD,OAAO,YAAY,KAAK,KAAK,CAAC,UAAU,KAAK,IAAI;IACnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;IACT;AACF;AAKO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,MAAM,cAAc,YAAY,GAAG,CAAC,qIAAA,CAAA,sBAAmB;QACvD,OAAO,cAAc,YAAY,KAAK,GAAG;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO;IACT;AACF;AAKO,eAAe;IASpB,MAAM,CAAC,SAAS,WAAW,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC1D;QACA;QACA;KACD;IAED,OAAO;QACL;QACA;QACA;IACF;AACF;AAKO,eAAe,iBAAiB,IAAe;IACpD,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,YAAY,GAAG,CAAC,qIAAA,CAAA,kBAAe,EAAE,KAAK,SAAS,CAAC,OAAO,qIAAA,CAAA,iBAAc;IACvE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;IAClD;AACF;AAKO,eAAe,mBAAmB,IAIxC;IACC,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,YAAY,GAAG,CAAC,qIAAA,CAAA,oBAAiB,EAAE,KAAK,SAAS,CAAC,OAAO,qIAAA,CAAA,iBAAc;IACzE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;IACpD;AACF;AAKO,eAAe,qBAAqB,EAAU;IACnD,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,YAAY,GAAG,CAAC,qIAAA,CAAA,sBAAmB,EAAE,IAAI;YACvC,GAAG,qIAAA,CAAA,iBAAc;YACjB,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK,MAAM,KAAK,KAAK,KAAK;QACtD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;IACtD;AACF;AAKO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM;QAC1B,YAAY,MAAM,CAAC,qIAAA,CAAA,kBAAe;QAClC,YAAY,MAAM,CAAC,qIAAA,CAAA,oBAAiB;QACpC,YAAY,MAAM,CAAC,qIAAA,CAAA,sBAAmB;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C;IAC3D;AACF;;;IA/MsB;IA0BA;IA2BA;IA+BA;IAcA;IAkBA;IAcA;IAyBA;IAYA;IAgBA;IAeA;;AAtMA,+OAAA;AA0BA,+OAAA;AA2BA,+OAAA;AA+BA,+OAAA;AAcA,+OAAA;AAkBA,+OAAA;AAcA,+OAAA;AAyBA,+OAAA;AAYA,+OAAA;AAgBA,+OAAA;AAeA,+OAAA","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/.next-internal/server/app/admin/system-health/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {linkTrackingDataToUser as '40b2bf7ee2d63442ae3d2aa4c95aeeb7fb662f60b7'} from 'ACTIONS_MODULE0'\nexport {getUserTrackingData as '407534cea092bdf2b90d5ab59c0fcffd3f1c56cbbc'} from 'ACTIONS_MODULE0'\nexport {saveUTMDataDuringOnboarding as '603ed09994efc8b1d4fbf153f83a11cc7bc3bbc10b'} from 'ACTIONS_MODULE0'\nexport {getServerUTMData as '00088a749312c45a915036e6598fd678ed3ec5a46a'} from 'ACTIONS_MODULE0'\nexport {getServerVisitData as '00b2ff056e81e3de5a14482d74deebc03e6d20ec83'} from 'ACTIONS_MODULE0'\nexport {getServerAnonymousId as '00a89c8077261bbdce3b6b27cac9700c2137b45daa'} from 'ACTIONS_MODULE0'\nexport {getServerTrackingData as '00237d5a0948aafbfd9347a0e126db690538f4a91b'} from 'ACTIONS_MODULE0'\nexport {setServerUTMData as '408609e61d2f7c8f0cbf6636c854c7cee41b933309'} from 'ACTIONS_MODULE0'\nexport {setServerVisitData as '40f5b8ae32928f33cd724014cb056c4c129f043559'} from 'ACTIONS_MODULE0'\nexport {setServerAnonymousId as '40c395d268949360ffae61d2b892442c162cb9de73'} from 'ACTIONS_MODULE0'\nexport {clearServerTrackingCookies as '0047669ca0c477a8ff7d0bcb81bc72c873efcddb56'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/system-health/components/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/system-health/components/data-table.tsx <module evaluation>\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,uFACA","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/system-health/components/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/system-health/components/data-table.tsx\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mEACA","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/system-health/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/system-health/components/columns.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oFACA","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/system-health/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/system-health/components/columns.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,gEACA","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/system-health/page.tsx"],"sourcesContent":["import { DataTable } from \"./components/data-table\"\r\nimport { columns, System } from \"./components/columns\"\r\n\r\nconst systemsData: System[] = [\r\n  {\r\n    id: \"1\",\r\n    system: \"Supabase\",\r\n    status: \"operational\",\r\n    lastChecked: \"2024-04-16T12:00:00Z\",\r\n    responseTime: \"120ms\",\r\n    uptime: \"99.99%\",\r\n    version: \"1.0.0\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    system: \"OpenAI\",\r\n    status: \"operational\",\r\n    lastChecked: \"2024-04-16T12:00:00Z\",\r\n    responseTime: \"450ms\",\r\n    uptime: \"99.95%\",\r\n    version: \"4.0.0\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    system: \"Recall AI\",\r\n    status: \"degraded\",\r\n    lastChecked: \"2024-04-16T12:00:00Z\",\r\n    responseTime: \"800ms\",\r\n    uptime: \"99.80%\",\r\n    version: \"2.1.0\",\r\n  },\r\n]\r\n\r\nexport default function SystemsCheckPage() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4 p-4 lg:p-6\">\r\n      <div className=\"space-y-2\">\r\n        <h1 className=\"text-2xl font-bold tracking-tight\">Systems Status</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Monitor the status and performance of all integrated systems.\r\n        </p>\r\n      </div>\r\n      <DataTable columns={columns} data={systemsData} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,cAAwB;IAC5B;QACE,IAAI;QACJ,QAAQ;QACR,QAAQ;QACR,aAAa;QACb,cAAc;QACd,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,QAAQ;QACR,aAAa;QACb,cAAc;QACd,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,QAAQ;QACR,aAAa;QACb,cAAc;QACd,QAAQ;QACR,SAAS;IACX;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC,uKAAA,CAAA,YAAS;gBAAC,SAAS,iKAAA,CAAA,UAAO;gBAAE,MAAM;;;;;;;;;;;;AAGzC","debugId":null}}]
}