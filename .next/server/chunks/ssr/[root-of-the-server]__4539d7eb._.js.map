{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://E%3A/breyholtz%20holding/arti-notes/project/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { cookies } from 'next/headers'\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies()\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) =>\r\n              cookieStore.set(name, value, options)\r\n            )\r\n          } catch {\r\n            // The `setAll` method was called from a Server Component.\r\n            // This can be ignored if you have middleware refreshing\r\n            // user sessions.\r\n          }\r\n        },\r\n      },\r\n    }\r\n  )\r\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://E%3A/breyholtz%20holding/arti-notes/project/src/app/login/actions.ts"],"sourcesContent":["'use server'\r\n\r\nimport { revalidatePath } from 'next/cache'\r\nimport { redirect } from 'next/navigation'\r\n\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function login(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: formData.get('password') as string,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signInWithPassword(data)\r\n\r\n  if (error) {\r\n    redirect('/error')\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/')\r\n}\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient()\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get('email') as string,\r\n    password: formData.get('password') as string,\r\n  }\r\n\r\n  const { error } = await supabase.auth.signUp(data)\r\n\r\n  if (error) {\r\n    redirect('/error')\r\n  }\r\n\r\n  revalidatePath('/', 'layout')\r\n  redirect('/')\r\n}"],"names":[],"mappings":";;;;;;AAEA;AACA;AAAA;AAEA;;;;;;;AAEO,eAAe,MAAM,QAAkB;IAC5C,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAElC,oCAAoC;IACpC,+CAA+C;IAC/C,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;IAEzD,IAAI,OAAO;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,OAAO,QAAkB;IAC7C,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAElC,oCAAoC;IACpC,+CAA+C;IAC/C,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;IAE7C,IAAI,OAAO;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IAtCsB;IAoBA;;AApBA,+OAAA;AAoBA,+OAAA","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file://E%3A/breyholtz%20holding/arti-notes/project/.next-internal/server/app/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signup as '40c6cd5966b91b9a16ca436c01975dc5a0199aef12'} from 'ACTIONS_MODULE0'\nexport {login as '40eb7f555376a66c8578ffb217a629765be3285e1c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://E%3A/breyholtz%20holding/arti-notes/project/src/app/login/page.tsx"],"sourcesContent":["import { login, signup } from './actions.ts'\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input id=\"email\" name=\"email\" type=\"email\" required />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <input id=\"password\" name=\"password\" type=\"password\" required />\r\n      <button formAction={login}>Log in</button>\r\n      <button formAction={signup}>Sign up</button>\r\n    </form>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC;gBAAM,SAAQ;0BAAQ;;;;;;0BACvB,8OAAC;gBAAM,IAAG;gBAAQ,MAAK;gBAAQ,MAAK;gBAAQ,QAAQ;;;;;;0BACpD,8OAAC;gBAAM,SAAQ;0BAAW;;;;;;0BAC1B,8OAAC;gBAAM,IAAG;gBAAW,MAAK;gBAAW,MAAK;gBAAW,QAAQ;;;;;;0BAC7D,8OAAC;gBAAO,YAAY,8HAAA,CAAA,QAAK;0BAAE;;;;;;0BAC3B,8OAAC;gBAAO,YAAY,8HAAA,CAAA,SAAM;0BAAE;;;;;;;;;;;;AAGlC","debugId":null}}]
}