{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport async function createClient() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: any) {\n          cookieStore.set({ name, value, ...options });\n        },\n        remove(name: string, options: any) {\n          cookieStore.set({ name, value: \"\", ...options });\n        },\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/app/auth/callback/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { createClient } from \"@/utils/supabase/server\";\n\nexport async function GET(request: Request) {\n  const { searchParams, origin } = new URL(request.url);\n  const code = searchParams.get(\"code\");\n  const next = searchParams.get(\"next\") ?? \"/onboarding\";\n\n  if (code) {\n    const supabase = await createClient();\n    const { error } = await supabase.auth.exchangeCodeForSession(code);\n    if (!error) {\n      const forwardedHost = request.headers.get(\"x-forwarded-host\");\n      const isLocalEnv = process.env.NODE_ENV === \"development\";\n      if (isLocalEnv) {\n        return NextResponse.redirect(`${origin}${next}`);\n      } else if (forwardedHost) {\n        return NextResponse.redirect(`https://${forwardedHost}${next}`);\n      } else {\n        return NextResponse.redirect(`${origin}${next}`);\n      }\n    }\n  }\n\n  // If there's an error or no code, redirect to the error page\n  return NextResponse.redirect(`${origin}/auth/auth-code-error`);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IACpD,MAAM,OAAO,aAAa,GAAG,CAAC;IAC9B,MAAM,OAAO,aAAa,GAAG,CAAC,WAAW;IAEzC,IAAI,MAAM;QACR,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,sBAAsB,CAAC;QAC7D,IAAI,CAAC,OAAO;YACV,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC;YAC1C,MAAM,aAAa,oDAAyB;YAC5C,wCAAgB;gBACd,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,GAAG,SAAS,MAAM;YACjD,OAAO;;YAIP;QACF;IACF;IAEA,6DAA6D;IAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,GAAG,OAAO,qBAAqB,CAAC;AAC/D","debugId":null}}]
}