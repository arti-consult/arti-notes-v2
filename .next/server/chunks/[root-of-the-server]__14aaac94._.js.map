{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/lib/nlyas.ts"],"sourcesContent":["// src/lib/nlyas.ts\r\nimport Nylas from \"nylas\";\r\n\r\nexport const nylasConfig = {\r\n  apiKey: process.env.NYLAS_API_KEY!,\r\n  clientId: process.env.NYLAS_CLIENT_ID!,\r\n  callbackUri: `${process.env.NEXT_PUBLIC_SITE_URL}/api/auth/nylas/callback`,\r\n};\r\n\r\nexport const nylas = new Nylas({\r\n  apiKey: nylasConfig.apiKey,\r\n  apiUri: process.env.NYLAS_API_URI || \"https://api.nylas.com\",\r\n});\r\n\r\n// Helper function to get authorization URL\r\nexport function getNylasAuthUrl(userId?: string) {\r\n  return nylas.auth.urlForOAuth2({\r\n    clientId: nylasConfig.clientId,\r\n    redirectUri: nylasConfig.callbackUri,\r\n    scope: [\r\n      \"https://www.googleapis.com/auth/calendar.readonly\",\r\n      \"https://www.googleapis.com/auth/calendar.events\",\r\n    ],\r\n    state: userId, // Pass user ID for tracking\r\n  });\r\n}\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;AACnB;AAAA;;AAEO,MAAM,cAAc;IACzB,QAAQ,QAAQ,GAAG,CAAC,aAAa;IACjC,UAAU,QAAQ,GAAG,CAAC,eAAe;IACrC,aAAa,6DAAoC,wBAAwB,CAAC;AAC5E;AAEO,MAAM,QAAQ,IAAI,8JAAA,CAAA,UAAK,CAAC;IAC7B,QAAQ,YAAY,MAAM;IAC1B,QAAQ,QAAQ,GAAG,CAAC,aAAa,IAAI;AACvC;AAGO,SAAS,gBAAgB,MAAe;IAC7C,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC;QAC7B,UAAU,YAAY,QAAQ;QAC9B,aAAa,YAAY,WAAW;QACpC,OAAO;YACL;YACA;SACD;QACD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/utils/supabase/server.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // Handle cookie setting error\r\n            console.error(\"Error setting cookie:\", error);\r\n          }\r\n        },\r\n        remove(name: string, options: any) {\r\n          try {\r\n            cookieStore.set({ name, value: \"\", ...options });\r\n          } catch (error) {\r\n            // Handle cookie removal error\r\n            console.error(\"Error removing cookie:\", error);\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;;;;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;oBACd,8BAA8B;oBAC9B,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;IACF;AAEJ;;;IA9BsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///D:/breyholtz%20holding/arti-notes/arti-notes-v3/src/app/api/auth/nylas/token/route.ts"],"sourcesContent":["// src/app/api/auth/nylas/token/route.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { nylas, nylasConfig } from \"@/lib/nlyas\";\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log(\"Received token exchange request\");\r\n    const { code, userId } = await request.json();\r\n\r\n    if (!code) {\r\n      return NextResponse.json({ error: \"No code provided\" }, { status: 400 });\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Verify user is authenticated (fallback if userId not provided)\r\n    let finalUserId = userId;\r\n    if (!finalUserId) {\r\n      const {\r\n        data: { user },\r\n        error: userError,\r\n      } = await supabase.auth.getUser();\r\n\r\n      if (userError || !user) {\r\n        console.error(\"User not authenticated:\", userError);\r\n        return NextResponse.json(\r\n          { error: \"Authentication required\" },\r\n          { status: 401 }\r\n        );\r\n      }\r\n      finalUserId = user.id;\r\n    }\r\n\r\n    if (\r\n      !nylasConfig.apiKey ||\r\n      !nylasConfig.clientId ||\r\n      !nylasConfig.callbackUri\r\n    ) {\r\n      return NextResponse.json(\r\n        { error: \"Missing required Nylas environment variables\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log(\"Exchanging code for token with Nylas...\");\r\n\r\n    const response = await nylas.auth.exchangeCodeForToken({\r\n      clientSecret: nylasConfig.apiKey,\r\n      clientId: nylasConfig.clientId,\r\n      redirectUri: `${process.env.NEXT_PUBLIC_SITE_URL}/api/auth/nylas/callback`,\r\n      code,\r\n    });\r\n\r\n    const { grantId, accessToken, refreshToken, expiresIn } = response;\r\n\r\n    console.log(\"Token exchange successful:\", {\r\n      grantId,\r\n      hasAccessToken: !!accessToken,\r\n      hasRefreshToken: !!refreshToken,\r\n      expiresIn,\r\n    });\r\n\r\n    // Save the grant ID directly to the profiles table instead of calendar_connections\r\n    console.log(\"üîÑ Saving grant ID to profiles table for user:\", finalUserId);\r\n\r\n    try {\r\n      const { data: profileData, error: profileError } = await supabase\r\n        .from(\"profiles\")\r\n        .update({\r\n          nylas_grant_id: grantId,\r\n          calendar_connected: true,\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"id\", finalUserId)\r\n        .select();\r\n\r\n      if (profileError) {\r\n        console.error(\"‚ùå Error updating profile with grant ID:\", profileError);\r\n        return NextResponse.json(\r\n          { error: \"Failed to save grant ID to profile\" },\r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      console.log(\"‚úÖ Successfully saved grant ID to profile:\", profileData);\r\n\r\n      // Also update onboarding record\r\n      const { error: onboardingError } = await supabase\r\n        .from(\"user_onboarding\")\r\n        .update({\r\n          calendar_connected: true,\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq(\"user_id\", finalUserId);\r\n\r\n      if (onboardingError) {\r\n        console.log(\r\n          \"‚ö†Ô∏è Could not update onboarding record:\",\r\n          onboardingError.message\r\n        );\r\n        // Don't fail the whole flow for this\r\n      } else {\r\n        console.log(\"‚úÖ Updated onboarding record with calendar connection\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"üí• Exception saving grant ID:\", error);\r\n      return NextResponse.json(\r\n        { error: \"Exception occurred while saving grant ID\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      message: \"OAuth2 flow completed successfully\",\r\n      grantId,\r\n      accessToken, // Include access token in response\r\n      profileUpdated: true,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error exchanging code for token:\", error);\r\n    return NextResponse.json(\r\n      {\r\n        error: \"Failed to exchange code for token\",\r\n        details: error instanceof Error ? error.message : \"Unknown error\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}