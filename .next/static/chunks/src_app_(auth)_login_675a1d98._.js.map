{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/login/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function login(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get(\"email\") as string,\r\n    password: formData.get(\"password\") as string,\r\n  };\r\n\r\n  const { error } = await supabase.auth.signInWithPassword(data);\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n\r\n  revalidatePath(\"/\", \"layout\");\r\n  redirect(\"/dashboard\");\r\n}\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get(\"email\") as string,\r\n    password: formData.get(\"password\") as string,\r\n  };\r\n\r\n  const { error } = await supabase.auth.signUp(data);\r\n\r\n  if (error) {\r\n    redirect(\"/error\");\r\n  }\r\n\r\n  revalidatePath(\"/\", \"layout\");\r\n  redirect(\"/dashboard\");\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient();\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: \"google\",\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  });\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient();\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: \"azure\",\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  });\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAOsB,QAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/login/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function login(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get(\"email\") as string,\r\n    password: formData.get(\"password\") as string,\r\n  };\r\n\r\n  const { error } = await supabase.auth.signInWithPassword(data);\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n\r\n  revalidatePath(\"/\", \"layout\");\r\n  redirect(\"/dashboard\");\r\n}\r\n\r\nexport async function signup(formData: FormData) {\r\n  const supabase = await createClient();\r\n\r\n  // type-casting here for convenience\r\n  // in practice, you should validate your inputs\r\n  const data = {\r\n    email: formData.get(\"email\") as string,\r\n    password: formData.get(\"password\") as string,\r\n  };\r\n\r\n  const { error } = await supabase.auth.signUp(data);\r\n\r\n  if (error) {\r\n    redirect(\"/error\");\r\n  }\r\n\r\n  revalidatePath(\"/\", \"layout\");\r\n  redirect(\"/dashboard\");\r\n}\r\n\r\nexport async function signInWithGoogle() {\r\n  const supabase = await createClient();\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: \"google\",\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  });\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n}\r\n\r\nexport async function signInWithMicrosoft() {\r\n  const supabase = await createClient();\r\n  const { error } = await supabase.auth.signInWithOAuth({\r\n    provider: \"azure\",\r\n    options: {\r\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\r\n    },\r\n  });\r\n\r\n  if (error) {\r\n    return { error: error.message };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IA6DsB,sBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/%28auth%29/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Suspense } from \"react\";\nimport { login, signInWithMicrosoft } from \"./actions\";\nimport { FaGoogle, FaMicrosoft } from \"react-icons/fa\";\nimport { createClient } from \"@/utils/supabase/client\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\n\nfunction LoginFormContent() {\n  const router = useRouter();\n  const supabase = createClient();\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n    const checkSession = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n\n      if (session) {\n        router.push(\"/dashboard\");\n      }\n    };\n\n    checkSession();\n  }, [router]);\n\n  if (!isMounted) {\n    return null;\n  }\n\n  const handleGoogleSignIn = async () => {\n    setIsLoading(true);\n    setError(null);\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: \"google\",\n      options: {\n        redirectTo: `${window.location.origin}/auth/callback`,\n      },\n    });\n\n    if (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-lg\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">Welcome back</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">Sign in to your account</p>\n        </div>\n\n        {error && (\n          <div\n            className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded relative\"\n            role=\"alert\"\n          >\n            <span className=\"block sm:inline\">{error}</span>\n            {error.includes(\"No account found\") && (\n              <div className=\"mt-2\">\n                <Link\n                  href=\"/sign-up\"\n                  className=\"text-red-600 hover:text-red-800 underline\"\n                >\n                  Create an account\n                </Link>\n              </div>\n            )}\n          </div>\n        )}\n\n        <form\n          action={async (formData) => {\n            setIsLoading(true);\n            setError(null);\n            const result = await login(formData);\n            if (result?.error) {\n              setError(result.error);\n            }\n            setIsLoading(false);\n          }}\n          className=\"mt-8 space-y-6\"\n        >\n          <div className=\"space-y-4\">\n            <div>\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"remember-me\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n\n            <div className=\"text-sm\">\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n              >\n                Forgot your password?\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? \"Signing in...\" : \"Sign in\"}\n            </button>\n          </div>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-gray-500\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-6 grid grid-cols-2 gap-3\">\n              <button\n                type=\"button\"\n                onClick={handleGoogleSignIn}\n                disabled={isLoading}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <FaGoogle className=\"w-5 h-5\" />\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => signInWithMicrosoft()}\n                disabled={isLoading}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <FaMicrosoft className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction LoginFormFallback() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-lg\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">Welcome back</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function LoginPage() {\n  return (\n    <Suspense fallback={<LoginFormFallback />}>\n      <LoginFormContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}