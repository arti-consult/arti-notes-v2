{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/roles/actions/roles.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\ninterface RolePermission {\r\n  permission_id: string;\r\n}\r\n\r\ninterface Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  created_at: string;\r\n  role_permissions?: RolePermission[];\r\n}\r\n\r\nexport async function getRoles() {\r\n  const supabase = await createClient();\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"roles\")\r\n    .select(\r\n      `\r\n      *,\r\n      role_permissions (\r\n        permission_id\r\n      )\r\n    `\r\n    )\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to fetch roles\");\r\n  }\r\n\r\n  // Transform the data to include permissions array\r\n  return (data as Role[]).map((role) => ({\r\n    ...role,\r\n    permissions: role.role_permissions?.map((rp) => rp.permission_id) || [],\r\n  }));\r\n}\r\n\r\nexport async function updateRole(\r\n  id: string,\r\n  updates: {\r\n    name: string;\r\n    description: string;\r\n    permissions?: string[];\r\n  }\r\n) {\r\n  const supabase = await createClient();\r\n  const { permissions, ...roleUpdates } = updates;\r\n\r\n  // Start a transaction\r\n  const { error: roleError } = await supabase\r\n    .from(\"roles\")\r\n    .update(roleUpdates)\r\n    .eq(\"id\", id);\r\n\r\n  if (roleError) {\r\n    throw new Error(\"Failed to update role\");\r\n  }\r\n\r\n  if (permissions) {\r\n    // Delete existing permissions\r\n    const { error: deleteError } = await supabase\r\n      .from(\"role_permissions\")\r\n      .delete()\r\n      .eq(\"role_id\", id);\r\n\r\n    if (deleteError) {\r\n      throw new Error(\"Failed to update role permissions\");\r\n    }\r\n\r\n    // Insert new permissions\r\n    if (permissions.length > 0) {\r\n      const { error: insertError } = await supabase\r\n        .from(\"role_permissions\")\r\n        .insert(\r\n          permissions.map((permissionId) => ({\r\n            role_id: id,\r\n            permission_id: permissionId,\r\n          }))\r\n        );\r\n\r\n      if (insertError) {\r\n        throw new Error(\"Failed to update role permissions\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function createRole(role: { name: string; description: string }) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"roles\").insert([role]);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to create role\");\r\n  }\r\n}\r\n\r\nexport async function deleteRole(id: string) {\r\n  const supabase = await createClient();\r\n\r\n  // Delete role permissions first (due to foreign key constraint)\r\n  const { error: permissionsError } = await supabase\r\n    .from(\"role_permissions\")\r\n    .delete()\r\n    .eq(\"role_id\", id);\r\n\r\n  if (permissionsError) {\r\n    throw new Error(\"Failed to delete role permissions\");\r\n  }\r\n\r\n  // Then delete the role\r\n  const { error } = await supabase.from(\"roles\").delete().eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to delete role\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAgBsB,WAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/roles/actions/roles.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\ninterface RolePermission {\r\n  permission_id: string;\r\n}\r\n\r\ninterface Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  created_at: string;\r\n  role_permissions?: RolePermission[];\r\n}\r\n\r\nexport async function getRoles() {\r\n  const supabase = await createClient();\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"roles\")\r\n    .select(\r\n      `\r\n      *,\r\n      role_permissions (\r\n        permission_id\r\n      )\r\n    `\r\n    )\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to fetch roles\");\r\n  }\r\n\r\n  // Transform the data to include permissions array\r\n  return (data as Role[]).map((role) => ({\r\n    ...role,\r\n    permissions: role.role_permissions?.map((rp) => rp.permission_id) || [],\r\n  }));\r\n}\r\n\r\nexport async function updateRole(\r\n  id: string,\r\n  updates: {\r\n    name: string;\r\n    description: string;\r\n    permissions?: string[];\r\n  }\r\n) {\r\n  const supabase = await createClient();\r\n  const { permissions, ...roleUpdates } = updates;\r\n\r\n  // Start a transaction\r\n  const { error: roleError } = await supabase\r\n    .from(\"roles\")\r\n    .update(roleUpdates)\r\n    .eq(\"id\", id);\r\n\r\n  if (roleError) {\r\n    throw new Error(\"Failed to update role\");\r\n  }\r\n\r\n  if (permissions) {\r\n    // Delete existing permissions\r\n    const { error: deleteError } = await supabase\r\n      .from(\"role_permissions\")\r\n      .delete()\r\n      .eq(\"role_id\", id);\r\n\r\n    if (deleteError) {\r\n      throw new Error(\"Failed to update role permissions\");\r\n    }\r\n\r\n    // Insert new permissions\r\n    if (permissions.length > 0) {\r\n      const { error: insertError } = await supabase\r\n        .from(\"role_permissions\")\r\n        .insert(\r\n          permissions.map((permissionId) => ({\r\n            role_id: id,\r\n            permission_id: permissionId,\r\n          }))\r\n        );\r\n\r\n      if (insertError) {\r\n        throw new Error(\"Failed to update role permissions\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function createRole(role: { name: string; description: string }) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"roles\").insert([role]);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to create role\");\r\n  }\r\n}\r\n\r\nexport async function deleteRole(id: string) {\r\n  const supabase = await createClient();\r\n\r\n  // Delete role permissions first (due to foreign key constraint)\r\n  const { error: permissionsError } = await supabase\r\n    .from(\"role_permissions\")\r\n    .delete()\r\n    .eq(\"role_id\", id);\r\n\r\n  if (permissionsError) {\r\n    throw new Error(\"Failed to delete role permissions\");\r\n  }\r\n\r\n  // Then delete the role\r\n  const { error } = await supabase.from(\"roles\").delete().eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to delete role\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IA0CsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/roles/actions/roles.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\ninterface RolePermission {\r\n  permission_id: string;\r\n}\r\n\r\ninterface Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  created_at: string;\r\n  role_permissions?: RolePermission[];\r\n}\r\n\r\nexport async function getRoles() {\r\n  const supabase = await createClient();\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"roles\")\r\n    .select(\r\n      `\r\n      *,\r\n      role_permissions (\r\n        permission_id\r\n      )\r\n    `\r\n    )\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to fetch roles\");\r\n  }\r\n\r\n  // Transform the data to include permissions array\r\n  return (data as Role[]).map((role) => ({\r\n    ...role,\r\n    permissions: role.role_permissions?.map((rp) => rp.permission_id) || [],\r\n  }));\r\n}\r\n\r\nexport async function updateRole(\r\n  id: string,\r\n  updates: {\r\n    name: string;\r\n    description: string;\r\n    permissions?: string[];\r\n  }\r\n) {\r\n  const supabase = await createClient();\r\n  const { permissions, ...roleUpdates } = updates;\r\n\r\n  // Start a transaction\r\n  const { error: roleError } = await supabase\r\n    .from(\"roles\")\r\n    .update(roleUpdates)\r\n    .eq(\"id\", id);\r\n\r\n  if (roleError) {\r\n    throw new Error(\"Failed to update role\");\r\n  }\r\n\r\n  if (permissions) {\r\n    // Delete existing permissions\r\n    const { error: deleteError } = await supabase\r\n      .from(\"role_permissions\")\r\n      .delete()\r\n      .eq(\"role_id\", id);\r\n\r\n    if (deleteError) {\r\n      throw new Error(\"Failed to update role permissions\");\r\n    }\r\n\r\n    // Insert new permissions\r\n    if (permissions.length > 0) {\r\n      const { error: insertError } = await supabase\r\n        .from(\"role_permissions\")\r\n        .insert(\r\n          permissions.map((permissionId) => ({\r\n            role_id: id,\r\n            permission_id: permissionId,\r\n          }))\r\n        );\r\n\r\n      if (insertError) {\r\n        throw new Error(\"Failed to update role permissions\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function createRole(role: { name: string; description: string }) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"roles\").insert([role]);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to create role\");\r\n  }\r\n}\r\n\r\nexport async function deleteRole(id: string) {\r\n  const supabase = await createClient();\r\n\r\n  // Delete role permissions first (due to foreign key constraint)\r\n  const { error: permissionsError } = await supabase\r\n    .from(\"role_permissions\")\r\n    .delete()\r\n    .eq(\"role_id\", id);\r\n\r\n  if (permissionsError) {\r\n    throw new Error(\"Failed to delete role permissions\");\r\n  }\r\n\r\n  // Then delete the role\r\n  const { error } = await supabase.from(\"roles\").delete().eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to delete role\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IA4FsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/roles/actions/roles.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\ninterface RolePermission {\r\n  permission_id: string;\r\n}\r\n\r\ninterface Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  created_at: string;\r\n  role_permissions?: RolePermission[];\r\n}\r\n\r\nexport async function getRoles() {\r\n  const supabase = await createClient();\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"roles\")\r\n    .select(\r\n      `\r\n      *,\r\n      role_permissions (\r\n        permission_id\r\n      )\r\n    `\r\n    )\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to fetch roles\");\r\n  }\r\n\r\n  // Transform the data to include permissions array\r\n  return (data as Role[]).map((role) => ({\r\n    ...role,\r\n    permissions: role.role_permissions?.map((rp) => rp.permission_id) || [],\r\n  }));\r\n}\r\n\r\nexport async function updateRole(\r\n  id: string,\r\n  updates: {\r\n    name: string;\r\n    description: string;\r\n    permissions?: string[];\r\n  }\r\n) {\r\n  const supabase = await createClient();\r\n  const { permissions, ...roleUpdates } = updates;\r\n\r\n  // Start a transaction\r\n  const { error: roleError } = await supabase\r\n    .from(\"roles\")\r\n    .update(roleUpdates)\r\n    .eq(\"id\", id);\r\n\r\n  if (roleError) {\r\n    throw new Error(\"Failed to update role\");\r\n  }\r\n\r\n  if (permissions) {\r\n    // Delete existing permissions\r\n    const { error: deleteError } = await supabase\r\n      .from(\"role_permissions\")\r\n      .delete()\r\n      .eq(\"role_id\", id);\r\n\r\n    if (deleteError) {\r\n      throw new Error(\"Failed to update role permissions\");\r\n    }\r\n\r\n    // Insert new permissions\r\n    if (permissions.length > 0) {\r\n      const { error: insertError } = await supabase\r\n        .from(\"role_permissions\")\r\n        .insert(\r\n          permissions.map((permissionId) => ({\r\n            role_id: id,\r\n            permission_id: permissionId,\r\n          }))\r\n        );\r\n\r\n      if (insertError) {\r\n        throw new Error(\"Failed to update role permissions\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function createRole(role: { name: string; description: string }) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"roles\").insert([role]);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to create role\");\r\n  }\r\n}\r\n\r\nexport async function deleteRole(id: string) {\r\n  const supabase = await createClient();\r\n\r\n  // Delete role permissions first (due to foreign key constraint)\r\n  const { error: permissionsError } = await supabase\r\n    .from(\"role_permissions\")\r\n    .delete()\r\n    .eq(\"role_id\", id);\r\n\r\n  if (permissionsError) {\r\n    throw new Error(\"Failed to delete role permissions\");\r\n  }\r\n\r\n  // Then delete the role\r\n  const { error } = await supabase.from(\"roles\").delete().eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to delete role\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAsGsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/permissions/actions/permissions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { createClient } from \"@/utils/supabase/server\";\r\n\r\nexport async function getPermissions() {\r\n  const supabase = await createClient();\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"permissions\")\r\n    .select(\"*\")\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to fetch permissions\");\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport async function updatePermission(\r\n  id: string,\r\n  updates: {\r\n    name: string;\r\n    description: string;\r\n  }\r\n) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase\r\n    .from(\"permissions\")\r\n    .update(updates)\r\n    .eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to update permission\");\r\n  }\r\n}\r\n\r\nexport async function createPermission(permission: {\r\n  name: string;\r\n  description: string;\r\n}) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"permissions\").insert([permission]);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to create permission\");\r\n  }\r\n}\r\n\r\nexport async function deletePermission(id: string) {\r\n  const supabase = await createClient();\r\n\r\n  const { error } = await supabase.from(\"permissions\").delete().eq(\"id\", id);\r\n\r\n  if (error) {\r\n    throw new Error(\"Failed to delete permission\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAIsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file://D%3A/breyholtz%20holding/arti-notes/arti-notes-v2/src/app/admin/roles/components/roles-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Trash2,\n  Plus,\n  ChevronDown,\n  ChevronUp,\n  GripVertical,\n} from \"lucide-react\";\nimport { getRoles, updateRole, createRole, deleteRole } from \"../actions/roles\";\nimport { getPermissions } from \"../../permissions/actions/permissions\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface Role {\n  id: string;\n  name: string;\n  description: string;\n  permissions?: string[];\n}\n\ninterface Permission {\n  id: string;\n  name: string;\n  description: string;\n}\n\nexport function RolesForm() {\n  const [roles, setRoles] = useState<Role[]>([]);\n  const [permissions, setPermissions] = useState<Permission[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [newRole, setNewRole] = useState({ name: \"\", description: \"\" });\n  const [expandedRole, setExpandedRole] = useState<string | null>(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [roleToDelete, setRoleToDelete] = useState<string | null>(null);\n  const [deleteConfirmation, setDeleteConfirmation] = useState(\"\");\n  const { toast } = useToast();\n  const permissionsList = permissions;\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    try {\n      const [rolesData, permissionsData] = await Promise.all([\n        getRoles(),\n        getPermissions(),\n      ]);\n      setRoles(rolesData);\n      setPermissions(permissionsData);\n    } catch (err) {\n      setError(\"Failed to load data\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const handleUpdate = async (role: Role) => {\n    try {\n      await updateRole(role.id, {\n        name: role.name,\n        description: role.description,\n        permissions: role.permissions,\n      });\n      toast({\n        title: \"Role updated\",\n        description: `The role '${role.name}' was updated successfully.`,\n      });\n    } catch (err) {\n      console.error(\"Failed to update role:\", err);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      await deleteRole(id);\n      await loadData();\n      setDeleteDialogOpen(false);\n      setRoleToDelete(null);\n      setDeleteConfirmation(\"\");\n    } catch (err) {\n      console.error(\"Failed to delete role:\", err);\n    }\n  };\n\n  const handleCreate = async () => {\n    try {\n      if (!newRole.name.trim()) {\n        return;\n      }\n      await createRole(newRole);\n      setNewRole({ name: \"\", description: \"\" });\n      await loadData();\n    } catch (err) {\n      console.error(\"Failed to create role:\", err);\n    }\n  };\n\n  const togglePermission = (roleId: string, permissionId: string) => {\n    const updatedRoles = roles.map((role) => {\n      if (role.id === roleId) {\n        const permissions = role.permissions || [];\n        const hasPermission = permissions.includes(permissionId);\n        const updatedPermissions = hasPermission\n          ? permissions.filter((id) => id !== permissionId)\n          : [...permissions, permissionId];\n\n        const updatedRole = {\n          ...role,\n          permissions: updatedPermissions,\n        };\n\n        // Update the role in the database\n        handleUpdate(updatedRole);\n        // Toast notification for permission change\n        const perm = permissionsList.find((p) => p.id === permissionId);\n        toast({\n          title: hasPermission ? \"Permission removed\" : \"Permission added\",\n          description: perm\n            ? `Permission '${perm.name}' was ${\n                hasPermission ? \"removed from\" : \"added to\"\n              } role '${role.name}'.`\n            : `Permission was ${\n                hasPermission ? \"removed from\" : \"added to\"\n              } role '${role.name}'.`,\n        });\n        return updatedRole;\n      }\n      return role;\n    });\n    setRoles(updatedRoles);\n  };\n\n  const openDeleteDialog = (id: string) => {\n    setRoleToDelete(id);\n    setDeleteDialogOpen(true);\n  };\n\n  if (loading) {\n    return <div>Loading roles...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-500\">{error}</div>;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Role Management</CardTitle>\n        <CardDescription>\n          Create and manage roles for your users\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {/* Create new role form */}\n          <div className=\"space-y-2 p-4 border rounded-lg border-dashed max-w-md mx-auto\">\n            <h3 className=\"font-medium\">Add New Role</h3>\n            <div className=\"space-y-2\">\n              <Input\n                placeholder=\"Role name\"\n                value={newRole.name}\n                onChange={(e) =>\n                  setNewRole({ ...newRole, name: e.target.value })\n                }\n              />\n              <Input\n                placeholder=\"Role description\"\n                value={newRole.description}\n                onChange={(e) =>\n                  setNewRole({ ...newRole, description: e.target.value })\n                }\n              />\n              <Button\n                onClick={handleCreate}\n                className=\"w-full\"\n                disabled={!newRole.name.trim()}\n              >\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Add Role\n              </Button>\n            </div>\n          </div>\n\n          {/* List of existing roles */}\n          <div className=\"flex flex-col items-center gap-4\">\n            {roles.map((role) => (\n              <div key={role.id} className=\"w-full max-w-md mx-auto\">\n                <div className=\"flex gap-4 items-center border rounded-lg px-2 py-2 bg-white shadow-sm\">\n                  <div className=\"flex items-center text-gray-400 hover:text-gray-600\">\n                    <GripVertical className=\"w-4 h-4 cursor-move\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <Input\n                      value={role.name}\n                      onChange={(e) => {\n                        const updatedRoles = roles.map((r) =>\n                          r.id === role.id ? { ...r, name: e.target.value } : r\n                        );\n                        setRoles(updatedRoles);\n                      }}\n                      className=\"font-medium text-base px-2 py-1\"\n                      style={{ minWidth: 0 }}\n                      disabled={expandedRole === role.id}\n                    />\n                  </div>\n                  <div className=\"flex gap-2 items-center\">\n                    <Button\n                      onClick={() => openDeleteDialog(role.id)}\n                      size=\"icon\"\n                      variant=\"ghost\"\n                      className=\"text-red-500 hover:bg-red-100\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        setExpandedRole(\n                          expandedRole === role.id ? null : role.id\n                        )\n                      }\n                      size=\"icon\"\n                      variant=\"ghost\"\n                    >\n                      {expandedRole === role.id ? (\n                        <ChevronUp className=\"w-4 h-4\" />\n                      ) : (\n                        <ChevronDown className=\"w-4 h-4\" />\n                      )}\n                    </Button>\n                  </div>\n                </div>\n                {expandedRole === role.id && (\n                  <div className=\"border rounded-lg mt-2 p-4 bg-gray-50 space-y-4\">\n                    <Input\n                      value={role.description}\n                      onChange={(e) => {\n                        const updatedRoles = roles.map((r) =>\n                          r.id === role.id\n                            ? { ...r, description: e.target.value }\n                            : r\n                        );\n                        setRoles(updatedRoles);\n                      }}\n                      className=\"text-sm text-muted-foreground\"\n                      placeholder=\"Role description\"\n                    />\n                    <Button\n                      onClick={() => handleUpdate(role)}\n                      size=\"sm\"\n                      variant=\"outline\"\n                    >\n                      Save\n                    </Button>\n                    {/* Permissions section */}\n                    <div className=\"mt-2 border-t pt-4\">\n                      <h4 className=\"font-medium text-sm mb-2\">Permissions</h4>\n                      <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2 bg-white rounded-md p-2 border\">\n                        {permissions.map((permission) => (\n                          <div\n                            key={permission.id}\n                            className=\"flex items-center gap-2 px-2 py-1 rounded hover:bg-gray-100 transition text-xs\"\n                          >\n                            <GripVertical className=\"w-3 h-3 text-gray-300 mr-1\" />\n                            <Checkbox\n                              id={`${role.id}-${permission.id}`}\n                              checked={(role.permissions || []).includes(\n                                permission.id\n                              )}\n                              onCheckedChange={() =>\n                                togglePermission(role.id, permission.id)\n                              }\n                              className=\"scale-90\"\n                            />\n                            <Label\n                              htmlFor={`${role.id}-${permission.id}`}\n                              className=\"text-xs cursor-pointer select-none\"\n                            >\n                              {permission.name}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </CardContent>\n\n      <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Delete Role</DialogTitle>\n            <DialogDescription>\n              This action cannot be undone. Please type \"delete\" to confirm.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"py-4\">\n            <Input\n              placeholder=\"Type 'delete' to confirm\"\n              value={deleteConfirmation}\n              onChange={(e) => setDeleteConfirmation(e.target.value)}\n            />\n          </div>\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setDeleteDialogOpen(false);\n                setRoleToDelete(null);\n                setDeleteConfirmation(\"\");\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => {\n                if (deleteConfirmation === \"delete\" && roleToDelete) {\n                  handleDelete(roleToDelete);\n                }\n              }}\n              disabled={deleteConfirmation !== \"delete\"}\n            >\n              Delete\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}