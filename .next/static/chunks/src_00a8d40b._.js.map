{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/utils/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from \"@supabase/ssr\";\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n}\n"],"names":[],"mappings":";;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/contexts/OnboardingContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useReducer,\n  useCallback,\n} from \"react\";\nimport {\n  OnboardingState,\n  OnboardingAction,\n  OnboardingFormData,\n} from \"@/types/onboarding\";\nimport { createClient } from \"@/utils/supabase/client\";\nimport { UTMParams } from \"@/utils/tracking/utm\";\n\ninterface OnboardingContextType {\n  state: OnboardingState;\n  dispatch: React.Dispatch<OnboardingAction>;\n  submitOnboarding: (userId: string) => Promise<void>;\n  requestMicPermission: () => Promise<boolean>;\n}\n\nconst initialState: OnboardingState = {\n  step: 1,\n  userType: null,\n  teamSize: null,\n  referralSource: null,\n  audioPurpose: null,\n  micPermission: null,\n  paymentCompleted: null,\n};\n\nconst OnboardingContext = createContext<OnboardingContextType | null>(null);\n\nconst onboardingReducer = (\n  state: OnboardingState,\n  action: OnboardingAction\n): OnboardingState => {\n  switch (action.type) {\n    case \"NEXT_STEP\":\n      return { ...state, step: state.step + 1 };\n    case \"PREV_STEP\":\n      return { ...state, step: Math.max(1, state.step - 1) };\n    case \"SET_USER_TYPE\":\n      return { ...state, userType: action.payload };\n    case \"SET_TEAM_SIZE\":\n      return { ...state, teamSize: action.payload };\n    case \"SET_REFERRAL_SOURCE\":\n      return { ...state, referralSource: action.payload };\n    case \"SET_AUDIO_PURPOSE\":\n      return { ...state, audioPurpose: action.payload };\n    case \"SET_MIC_PERMISSION\":\n      return { ...state, micPermission: action.payload };\n    case \"SET_PAYMENT_COMPLETED\":\n      return { ...state, paymentCompleted: action.payload };\n    case \"RESET\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const OnboardingProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [state, dispatch] = useReducer(onboardingReducer, initialState);\n  const supabase = createClient();\n\n  const requestMicPermission = useCallback(async (): Promise<boolean> => {\n    try {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error(\"Browser does not support media devices\");\n      }\n\n      // Request microphone access\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n      // Stop all tracks immediately after permission is granted\n      stream.getTracks().forEach((track) => track.stop());\n\n      dispatch({ type: \"SET_MIC_PERMISSION\", payload: true });\n      return true;\n    } catch (error) {\n      console.error(\"Error requesting microphone permission:\", error);\n      dispatch({ type: \"SET_MIC_PERMISSION\", payload: false });\n      return false;\n    }\n  }, []);\n\n  const submitOnboarding = useCallback(\n    async (userId: string): Promise<void> => {\n      try {\n        if (\n          !state.userType ||\n          !state.teamSize ||\n          !state.referralSource ||\n          !state.audioPurpose ||\n          !state.paymentCompleted\n        ) {\n          throw new Error(\"Missing required onboarding information\");\n        }\n\n        const onboardingData: OnboardingFormData = {\n          userId,\n          userType: state.userType,\n          teamSize: state.teamSize,\n          referralSource: state.referralSource,\n          audioPurpose: state.audioPurpose,\n          micPermission: state.micPermission ?? false,\n          paymentCompleted: state.paymentCompleted,\n        };\n\n        // Get UTM data from cookies if available\n        let utmData: UTMParams = {};\n        try {\n          if (typeof window !== \"undefined\") {\n            // Dynamically import to avoid SSR issues\n            const { getAllTrackingData } = await import(\"@/utils/tracking/utm\");\n            utmData = await getAllTrackingData();\n          }\n        } catch (err) {\n          console.error(\"Error getting UTM data:\", err);\n        }\n\n        // Save onboarding data to Supabase\n        const { data, error } = await supabase\n          .from(\"user_onboarding\")\n          .upsert({\n            user_id: userId,\n            user_type: onboardingData.userType,\n            team_size: onboardingData.teamSize,\n            referral_source: onboardingData.referralSource,\n            audio_purpose: onboardingData.audioPurpose,\n            mic_permission: onboardingData.micPermission,\n            payment_completed: onboardingData.paymentCompleted,\n            utm_source: utmData.utm_source || null,\n            utm_medium: utmData.utm_medium || null,\n            utm_campaign: utmData.utm_campaign || null,\n            referrer: utmData.referrer || null,\n            completed_at: new Date().toISOString(),\n          })\n          .select(\"id\")\n          .single();\n\n        if (error) throw error;\n\n        if (data?.id) {\n          // Link tracking data to onboarding data\n          try {\n            // Dynamically import server utility\n            const { saveUTMDataDuringOnboarding } = await import(\n              \"@/utils/tracking/server\"\n            );\n            await saveUTMDataDuringOnboarding(userId, data.id);\n          } catch (err) {\n            console.error(\"Error linking tracking data:\", err);\n            // Non-fatal error, continue\n          }\n        }\n\n        // Reset the state after successful submission\n        dispatch({ type: \"RESET\" });\n      } catch (error) {\n        console.error(\"Error submitting onboarding data:\", error);\n        throw error;\n      }\n    },\n    [state, supabase]\n  );\n\n  const value = {\n    state,\n    dispatch,\n    submitOnboarding,\n    requestMicPermission,\n  };\n\n  return (\n    <OnboardingContext.Provider value={value}>\n      {children}\n    </OnboardingContext.Provider>\n  );\n};\n\nexport const useOnboarding = () => {\n  const context = useContext(OnboardingContext);\n  if (!context) {\n    throw new Error(\"useOnboarding must be used within an OnboardingProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/maryniukk/Documents/Work/arti-notes-v2-main/src/app/%28auth%29/onboarding/layout.tsx"],"sourcesContent":["\"use client\";\n\nimport { OnboardingProvider } from \"@/contexts/OnboardingContext\";\n\nexport default function OnboardingLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen overflow-hidden\">\n      <OnboardingProvider>{children}</OnboardingProvider>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,wIAAA,CAAA,qBAAkB;sBAAE;;;;;;;;;;;AAG3B;KAVwB","debugId":null}}]
}